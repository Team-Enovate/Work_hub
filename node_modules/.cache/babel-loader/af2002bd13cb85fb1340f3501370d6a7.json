{"ast":null,"code":"\"use strict\";\n\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nexport function defineReadOnly(object, name, value) {\n  Object.defineProperty(object, name, {\n    enumerable: true,\n    value: value,\n    writable: false\n  });\n}\n// Crawl up the constructor chain to find a static method\nexport function getStatic(ctor, key) {\n  for (var i = 0; i < 32; i++) {\n    if (ctor[key]) {\n      return ctor[key];\n    }\n    if (!ctor.prototype || typeof ctor.prototype !== \"object\") {\n      break;\n    }\n    ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n  }\n  return null;\n}\nexport function resolveProperties(object) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var promises, results;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          promises = Object.keys(object).map(function (key) {\n            var value = object[key];\n            return Promise.resolve(value).then(function (v) {\n              return {\n                key: key,\n                value: v\n              };\n            });\n          });\n          _context.next = 3;\n          return Promise.all(promises);\n        case 3:\n          results = _context.sent;\n          return _context.abrupt(\"return\", results.reduce(function (accum, result) {\n            accum[result.key] = result.value;\n            return accum;\n          }, {}));\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n}\nexport function checkProperties(object, properties) {\n  if (!object || typeof object !== \"object\") {\n    logger.throwArgumentError(\"invalid object\", \"object\", object);\n  }\n  Object.keys(object).forEach(function (key) {\n    if (!properties[key]) {\n      logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n    }\n  });\n}\nexport function shallowCopy(object) {\n  var result = {};\n  for (var key in object) {\n    result[key] = object[key];\n  }\n  return result;\n}\nvar opaque = {\n  bigint: true,\n  boolean: true,\n  \"function\": true,\n  number: true,\n  string: true\n};\nfunction _isFrozen(object) {\n  // Opaque objects are not mutable, so safe to copy by assignment\n  if (object === undefined || object === null || opaque[typeof object]) {\n    return true;\n  }\n  if (Array.isArray(object) || typeof object === \"object\") {\n    if (!Object.isFrozen(object)) {\n      return false;\n    }\n    var keys = Object.keys(object);\n    for (var i = 0; i < keys.length; i++) {\n      var value = null;\n      try {\n        value = object[keys[i]];\n      } catch (error) {\n        // If accessing a value triggers an error, it is a getter\n        // designed to do so (e.g. Result) and is therefore \"frozen\"\n        continue;\n      }\n      if (!_isFrozen(value)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return logger.throwArgumentError(\"Cannot deepCopy \".concat(typeof object), \"object\", object);\n}\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object) {\n  if (_isFrozen(object)) {\n    return object;\n  }\n  // Arrays are mutable, so we need to create a copy\n  if (Array.isArray(object)) {\n    return Object.freeze(object.map(function (item) {\n      return deepCopy(item);\n    }));\n  }\n  if (typeof object === \"object\") {\n    var result = {};\n    for (var key in object) {\n      var value = object[key];\n      if (value === undefined) {\n        continue;\n      }\n      defineReadOnly(result, key, deepCopy(value));\n    }\n    return result;\n  }\n  return logger.throwArgumentError(\"Cannot deepCopy \".concat(typeof object), \"object\", object);\n}\nexport function deepCopy(object) {\n  return _deepCopy(object);\n}\nexport var Description = /*#__PURE__*/_createClass(function Description(info) {\n  _classCallCheck(this, Description);\n  for (var key in info) {\n    this[key] = deepCopy(info[key]);\n  }\n});","map":{"version":3,"mappings":"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","names":["Logger","version","logger","defineReadOnly","object","name","value","Object","defineProperty","enumerable","writable","getStatic","ctor","key","i","prototype","getPrototypeOf","constructor","resolveProperties","promises","keys","map","Promise","resolve","then","v","all","results","reduce","accum","result","checkProperties","properties","throwArgumentError","forEach","shallowCopy","opaque","bigint","boolean","number","string","_isFrozen","undefined","Array","isArray","isFrozen","length","error","_deepCopy","freeze","item","deepCopy","Description","info"],"sourceRoot":"","sources":["../src.ts/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}