{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _get from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nvar NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nexport var WebSocketProvider = /*#__PURE__*/function (_JsonRpcProvider) {\n  _inherits(WebSocketProvider, _JsonRpcProvider);\n  var _super = _createSuper(WebSocketProvider);\n  function WebSocketProvider(url, network) {\n    var _thisSuper, _this;\n    _classCallCheck(this, WebSocketProvider);\n    // This will be added in the future; please open an issue to expedite\n    if (network === \"any\") {\n      logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"network:any\"\n      });\n    }\n    if (typeof url === \"string\") {\n      _this = _super.call(this, url, network);\n    } else {\n      _this = _super.call(this, \"_websocket\", network);\n    }\n    _this._pollingInterval = -1;\n    _this._wsReady = false;\n    if (typeof url === \"string\") {\n      defineReadOnly(_assertThisInitialized(_this), \"_websocket\", new WebSocket(_this.connection.url));\n    } else {\n      defineReadOnly(_assertThisInitialized(_this), \"_websocket\", url);\n    }\n    defineReadOnly(_assertThisInitialized(_this), \"_requests\", {});\n    defineReadOnly(_assertThisInitialized(_this), \"_subs\", {});\n    defineReadOnly(_assertThisInitialized(_this), \"_subIds\", {});\n    defineReadOnly(_assertThisInitialized(_this), \"_detectNetwork\", _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(WebSocketProvider.prototype)), \"detectNetwork\", _thisSuper).call(_thisSuper));\n    // Stall sending requests until the socket is open...\n    _this.websocket.onopen = function () {\n      _this._wsReady = true;\n      Object.keys(_this._requests).forEach(function (id) {\n        _this.websocket.send(_this._requests[id].payload);\n      });\n    };\n    _this.websocket.onmessage = function (messageEvent) {\n      var data = messageEvent.data;\n      var result = JSON.parse(data);\n      if (result.id != null) {\n        var id = String(result.id);\n        var request = _this._requests[id];\n        delete _this._requests[id];\n        if (result.result !== undefined) {\n          request.callback(null, result.result);\n          _this.emit(\"debug\", {\n            action: \"response\",\n            request: JSON.parse(request.payload),\n            response: result.result,\n            provider: _assertThisInitialized(_this)\n          });\n        } else {\n          var error = null;\n          if (result.error) {\n            error = new Error(result.error.message || \"unknown error\");\n            defineReadOnly(error, \"code\", result.error.code || null);\n            defineReadOnly(error, \"response\", data);\n          } else {\n            error = new Error(\"unknown error\");\n          }\n          request.callback(error, undefined);\n          _this.emit(\"debug\", {\n            action: \"response\",\n            error: error,\n            request: JSON.parse(request.payload),\n            provider: _assertThisInitialized(_this)\n          });\n        }\n      } else if (result.method === \"eth_subscription\") {\n        // Subscription...\n        var sub = _this._subs[result.params.subscription];\n        if (sub) {\n          //this.emit.apply(this,                  );\n          sub.processFunc(result.params.result);\n        }\n      } else {\n        console.warn(\"this should not happen\");\n      }\n    };\n    // This Provider does not actually poll, but we want to trigger\n    // poll events for things that depend on them (like stalling for\n    // block and transaction lookups)\n    var fauxPoll = setInterval(function () {\n      _this.emit(\"poll\");\n    }, 1000);\n    if (fauxPoll.unref) {\n      fauxPoll.unref();\n    }\n    return _possibleConstructorReturn(_this);\n  }\n  // Cannot narrow the type of _websocket, as that is not backwards compatible\n  // so we add a getter and let the WebSocket be a public API.\n  _createClass(WebSocketProvider, [{\n    key: \"websocket\",\n    get: function get() {\n      return this._websocket;\n    }\n  }, {\n    key: \"detectNetwork\",\n    value: function detectNetwork() {\n      return this._detectNetwork;\n    }\n  }, {\n    key: \"pollingInterval\",\n    get: function get() {\n      return 0;\n    },\n    set: function set(value) {\n      logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setPollingInterval\"\n      });\n    }\n  }, {\n    key: \"resetEventsBlock\",\n    value: function resetEventsBlock(blockNumber) {\n      logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"resetEventBlock\"\n      });\n    }\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", null);\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"polling\",\n    set: function set(value) {\n      if (!value) {\n        return;\n      }\n      logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setPolling\"\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(method, params) {\n      var _this2 = this;\n      var rid = NextId++;\n      return new Promise(function (resolve, reject) {\n        function callback(error, result) {\n          if (error) {\n            return reject(error);\n          }\n          return resolve(result);\n        }\n        var payload = JSON.stringify({\n          method: method,\n          params: params,\n          id: rid,\n          jsonrpc: \"2.0\"\n        });\n        _this2.emit(\"debug\", {\n          action: \"request\",\n          request: JSON.parse(payload),\n          provider: _this2\n        });\n        _this2._requests[String(rid)] = {\n          callback: callback,\n          payload: payload\n        };\n        if (_this2._wsReady) {\n          _this2.websocket.send(payload);\n        }\n      });\n    }\n  }, {\n    key: \"_subscribe\",\n    value: function _subscribe(tag, param, processFunc) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this3 = this;\n        var subIdPromise, subId;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              subIdPromise = this._subIds[tag];\n              if (subIdPromise == null) {\n                subIdPromise = Promise.all(param).then(function (param) {\n                  return _this3.send(\"eth_subscribe\", param);\n                });\n                this._subIds[tag] = subIdPromise;\n              }\n              _context2.next = 4;\n              return subIdPromise;\n            case 4:\n              subId = _context2.sent;\n              this._subs[subId] = {\n                tag: tag,\n                processFunc: processFunc\n              };\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"_startEvent\",\n    value: function _startEvent(event) {\n      var _this4 = this;\n      switch (event.type) {\n        case \"block\":\n          this._subscribe(\"block\", [\"newHeads\"], function (result) {\n            var blockNumber = BigNumber.from(result.number).toNumber();\n            _this4._emitted.block = blockNumber;\n            _this4.emit(\"block\", blockNumber);\n          });\n          break;\n        case \"pending\":\n          this._subscribe(\"pending\", [\"newPendingTransactions\"], function (result) {\n            _this4.emit(\"pending\", result);\n          });\n          break;\n        case \"filter\":\n          this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], function (result) {\n            if (result.removed == null) {\n              result.removed = false;\n            }\n            _this4.emit(event.filter, _this4.formatter.filterLog(result));\n          });\n          break;\n        case \"tx\":\n          {\n            var emitReceipt = function emitReceipt(event) {\n              var hash = event.hash;\n              _this4.getTransactionReceipt(hash).then(function (receipt) {\n                if (!receipt) {\n                  return;\n                }\n                _this4.emit(hash, receipt);\n              });\n            };\n            // In case it is already mined\n            emitReceipt(event);\n            // To keep things simple, we start up a single newHeads subscription\n            // to keep an eye out for transactions we are watching for.\n            // Starting a subscription for an event (i.e. \"tx\") that is already\n            // running is (basically) a nop.\n            this._subscribe(\"tx\", [\"newHeads\"], function (result) {\n              _this4._events.filter(function (e) {\n                return e.type === \"tx\";\n              }).forEach(emitReceipt);\n            });\n            break;\n          }\n        // Nothing is needed\n        case \"debug\":\n        case \"poll\":\n        case \"willPoll\":\n        case \"didPoll\":\n        case \"error\":\n          break;\n        default:\n          console.log(\"unhandled:\", event);\n          break;\n      }\n    }\n  }, {\n    key: \"_stopEvent\",\n    value: function _stopEvent(event) {\n      var _this5 = this;\n      var tag = event.tag;\n      if (event.type === \"tx\") {\n        // There are remaining transaction event listeners\n        if (this._events.filter(function (e) {\n          return e.type === \"tx\";\n        }).length) {\n          return;\n        }\n        tag = \"tx\";\n      } else if (this.listenerCount(event.event)) {\n        // There are remaining event listeners\n        return;\n      }\n      var subId = this._subIds[tag];\n      if (!subId) {\n        return;\n      }\n      delete this._subIds[tag];\n      subId.then(function (subId) {\n        if (!_this5._subs[subId]) {\n          return;\n        }\n        delete _this5._subs[subId];\n        _this5.send(\"eth_unsubscribe\", [subId]);\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this6 = this;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(this.websocket.readyState === WebSocket.CONNECTING)) {\n                _context3.next = 3;\n                break;\n              }\n              _context3.next = 3;\n              return new Promise(function (resolve) {\n                _this6.websocket.onopen = function () {\n                  resolve(true);\n                };\n                _this6.websocket.onerror = function () {\n                  resolve(false);\n                };\n              });\n            case 3:\n              // Hangup\n              // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n              this.websocket.close(1000);\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n    }\n  }], [{\n    key: \"defaultUrl\",\n    value: function defaultUrl() {\n      return \"ws:/\\/localhost:8546\";\n    }\n  }]);\n  return WebSocketProvider;\n}(JsonRpcProvider);","map":{"version":3,"mappings":"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","names":["BigNumber","defineReadOnly","JsonRpcProvider","WebSocket","Logger","version","logger","NextId","WebSocketProvider","url","network","throwError","errors","UNSUPPORTED_OPERATION","operation","_pollingInterval","_wsReady","connection","websocket","onopen","Object","keys","_requests","forEach","id","send","payload","onmessage","messageEvent","data","result","JSON","parse","String","request","undefined","callback","emit","action","response","provider","error","Error","message","code","method","sub","_subs","params","subscription","processFunc","console","warn","fauxPoll","setInterval","unref","_websocket","_detectNetwork","value","blockNumber","rid","Promise","resolve","reject","stringify","jsonrpc","tag","param","subIdPromise","_subIds","all","then","subId","event","type","_subscribe","from","number","toNumber","_emitted","block","_getFilter","filter","removed","formatter","filterLog","emitReceipt","hash","getTransactionReceipt","receipt","_events","e","log","length","listenerCount","readyState","CONNECTING","onerror","close"],"sourceRoot":"","sources":["../src.ts/websocket-provider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}