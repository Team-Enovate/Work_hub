{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport EventEmitter from \"eventemitter3\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport { HttpConnection } from \"@walletconnect/jsonrpc-http-connection\";\nimport { getRpcUrl, signingMethods } from \"@walletconnect/utils\";\nimport { SignerConnection } from \"@walletconnect/signer-connection\";\nvar WalletConnectProvider = /*#__PURE__*/function () {\n  function WalletConnectProvider(opts) {\n    _classCallCheck(this, WalletConnectProvider);\n    this.events = new EventEmitter();\n    this.rpc = {\n      infuraId: opts === null || opts === void 0 ? void 0 : opts.infuraId,\n      custom: opts === null || opts === void 0 ? void 0 : opts.rpc\n    };\n    this.signer = new JsonRpcProvider(new SignerConnection(opts));\n    var chainId = this.signer.connection.chainId || (opts === null || opts === void 0 ? void 0 : opts.chainId) || 1;\n    this.http = this.setHttpProvider(chainId);\n    this.registerEventListeners();\n  }\n  _createClass(WalletConnectProvider, [{\n    key: \"connected\",\n    get: function get() {\n      return this.signer.connection.connected;\n    }\n  }, {\n    key: \"connector\",\n    get: function get() {\n      return this.signer.connection.connector;\n    }\n  }, {\n    key: \"accounts\",\n    get: function get() {\n      return this.signer.connection.accounts;\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return this.signer.connection.chainId;\n    }\n  }, {\n    key: \"rpcUrl\",\n    get: function get() {\n      var _a;\n      return ((_a = this.http) === null || _a === void 0 ? void 0 : _a.connection).url || \"\";\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(args) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = args.method;\n              _context.next = _context.t0 === \"eth_requestAccounts\" ? 3 : _context.t0 === \"eth_accounts\" ? 6 : _context.t0 === \"eth_chainId\" ? 7 : 8;\n              break;\n            case 3:\n              _context.next = 5;\n              return this.connect();\n            case 5:\n              return _context.abrupt(\"return\", this.signer.connection.accounts);\n            case 6:\n              return _context.abrupt(\"return\", this.signer.connection.accounts);\n            case 7:\n              return _context.abrupt(\"return\", this.signer.connection.chainId);\n            case 8:\n              return _context.abrupt(\"break\", 9);\n            case 9:\n              if (!signingMethods.includes(args.method)) {\n                _context.next = 11;\n                break;\n              }\n              return _context.abrupt(\"return\", this.signer.request(args));\n            case 11:\n              if (!(typeof this.http === \"undefined\")) {\n                _context.next = 13;\n                break;\n              }\n              throw new Error(\"Cannot request JSON-RPC method (\".concat(args.method, \") without provided rpc url\"));\n            case 13:\n              return _context.abrupt(\"return\", this.http.request(args));\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function request(_x) {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(args, callback) {\n      this.request(args).then(function (response) {\n        return callback(null, response);\n      }).catch(function (error) {\n        return callback(error, undefined);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var accounts;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.request({\n                method: \"eth_requestAccounts\"\n              });\n            case 2:\n              accounts = _context2.sent;\n              return _context2.abrupt(\"return\", accounts);\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n      return enable;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (this.signer.connection.connected) {\n                _context3.next = 3;\n                break;\n              }\n              _context3.next = 3;\n              return this.signer.connect();\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!this.signer.connection.connected) {\n                _context4.next = 3;\n                break;\n              }\n              _context4.next = 3;\n              return this.signer.disconnect();\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n      return disconnect;\n    }()\n  }, {\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n  }, {\n    key: \"once\",\n    value: function once(event, listener) {\n      this.events.once(event, listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(event, listener) {\n      this.events.removeListener(event, listener);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      this.events.off(event, listener);\n    }\n  }, {\n    key: \"isWalletConnect\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"registerEventListeners\",\n    value: function registerEventListeners() {\n      var _this = this;\n      this.signer.connection.on(\"accountsChanged\", function (accounts) {\n        _this.events.emit(\"accountsChanged\", accounts);\n      });\n      this.signer.connection.on(\"chainChanged\", function (chainId) {\n        _this.http = _this.setHttpProvider(chainId);\n        _this.events.emit(\"chainChanged\", chainId);\n      });\n      this.signer.on(\"disconnect\", function () {\n        _this.events.emit(\"disconnect\");\n      });\n    }\n  }, {\n    key: \"setHttpProvider\",\n    value: function setHttpProvider(chainId) {\n      var rpcUrl = getRpcUrl(chainId, this.rpc);\n      if (typeof rpcUrl === \"undefined\") return undefined;\n      var http = new JsonRpcProvider(new HttpConnection(rpcUrl));\n      return http;\n    }\n  }]);\n  return WalletConnectProvider;\n}();\nexport default WalletConnectProvider;","map":{"version":3,"mappings":"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","names":["EventEmitter","JsonRpcProvider","HttpConnection","getRpcUrl","signingMethods","SignerConnection","WalletConnectProvider","opts","rpc","infuraId","custom","signer","chainId","connection","http","setHttpProvider","registerEventListeners","connected","connector","accounts","url","args","method","connect","includes","request","Error","callback","then","response","catch","error","undefined","disconnect","event","listener","events","on","once","removeListener","off","emit","rpcUrl"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}