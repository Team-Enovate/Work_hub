{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nfunction isAccount(value) {\n  return value != null && isHexString(value.privateKey, 32) && value.address != null;\n}\nfunction hasMnemonic(value) {\n  var mnemonic = value.mnemonic;\n  return mnemonic && mnemonic.phrase;\n}\nexport var Wallet = /*#__PURE__*/function (_Signer) {\n  _inherits(Wallet, _Signer);\n  var _super = _createSuper(Wallet);\n  function Wallet(privateKey, provider) {\n    var _this;\n    _classCallCheck(this, Wallet);\n    _this = _super.call(this);\n    if (isAccount(privateKey)) {\n      var signingKey = new SigningKey(privateKey.privateKey);\n      defineReadOnly(_assertThisInitialized(_this), \"_signingKey\", function () {\n        return signingKey;\n      });\n      defineReadOnly(_assertThisInitialized(_this), \"address\", computeAddress(_this.publicKey));\n      if (_this.address !== getAddress(privateKey.address)) {\n        logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n      }\n      if (hasMnemonic(privateKey)) {\n        var srcMnemonic = privateKey.mnemonic;\n        defineReadOnly(_assertThisInitialized(_this), \"_mnemonic\", function () {\n          return {\n            phrase: srcMnemonic.phrase,\n            path: srcMnemonic.path || defaultPath,\n            locale: srcMnemonic.locale || \"en\"\n          };\n        });\n        var mnemonic = _this.mnemonic;\n        var node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n        if (computeAddress(node.privateKey) !== _this.address) {\n          logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n        }\n      } else {\n        defineReadOnly(_assertThisInitialized(_this), \"_mnemonic\", function () {\n          return null;\n        });\n      }\n    } else {\n      if (SigningKey.isSigningKey(privateKey)) {\n        /* istanbul ignore if */\n        if (privateKey.curve !== \"secp256k1\") {\n          logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n        }\n        defineReadOnly(_assertThisInitialized(_this), \"_signingKey\", function () {\n          return privateKey;\n        });\n      } else {\n        // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n        if (typeof privateKey === \"string\") {\n          if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n            privateKey = \"0x\" + privateKey;\n          }\n        }\n        var _signingKey = new SigningKey(privateKey);\n        defineReadOnly(_assertThisInitialized(_this), \"_signingKey\", function () {\n          return _signingKey;\n        });\n      }\n      defineReadOnly(_assertThisInitialized(_this), \"_mnemonic\", function () {\n        return null;\n      });\n      defineReadOnly(_assertThisInitialized(_this), \"address\", computeAddress(_this.publicKey));\n    }\n    /* istanbul ignore if */\n    if (provider && !Provider.isProvider(provider)) {\n      logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n    }\n    defineReadOnly(_assertThisInitialized(_this), \"provider\", provider || null);\n    return _this;\n  }\n  _createClass(Wallet, [{\n    key: \"mnemonic\",\n    get: function get() {\n      return this._mnemonic();\n    }\n  }, {\n    key: \"privateKey\",\n    get: function get() {\n      return this._signingKey().privateKey;\n    }\n  }, {\n    key: \"publicKey\",\n    get: function get() {\n      return this._signingKey().publicKey;\n    }\n  }, {\n    key: \"getAddress\",\n    value: function getAddress() {\n      return Promise.resolve(this.address);\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(provider) {\n      return new Wallet(this, provider);\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      var _this2 = this;\n      return resolveProperties(transaction).then(function (tx) {\n        if (tx.from != null) {\n          if (getAddress(tx.from) !== _this2.address) {\n            logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n          }\n          delete tx.from;\n        }\n        var signature = _this2._signingKey().signDigest(keccak256(serialize(tx)));\n        return serialize(tx, signature);\n      });\n    }\n  }, {\n    key: \"signMessage\",\n    value: function signMessage(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", joinSignature(this._signingKey().signDigest(hashMessage(message))));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"_signTypedData\",\n    value: function _signTypedData(domain, types, value) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this3 = this;\n        var populated;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _TypedDataEncoder.resolveNames(domain, types, value, function (name) {\n                if (_this3.provider == null) {\n                  logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"resolveName\",\n                    value: name\n                  });\n                }\n                return _this3.provider.resolveName(name);\n              });\n            case 2:\n              populated = _context2.sent;\n              return _context2.abrupt(\"return\", joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value))));\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"encrypt\",\n    value: function encrypt(password, options, progressCallback) {\n      if (typeof options === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n      }\n      if (progressCallback && typeof progressCallback !== \"function\") {\n        throw new Error(\"invalid callback\");\n      }\n      if (!options) {\n        options = {};\n      }\n      return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n  }], [{\n    key: \"createRandom\",\n    value: function createRandom(options) {\n      var entropy = randomBytes(16);\n      if (!options) {\n        options = {};\n      }\n      if (options.extraEntropy) {\n        entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n      }\n      var mnemonic = entropyToMnemonic(entropy, options.locale);\n      return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n  }, {\n    key: \"fromEncryptedJson\",\n    value: function fromEncryptedJson(json, password, progressCallback) {\n      return decryptJsonWallet(json, password, progressCallback).then(function (account) {\n        return new Wallet(account);\n      });\n    }\n  }, {\n    key: \"fromEncryptedJsonSync\",\n    value: function fromEncryptedJsonSync(json, password) {\n      return new Wallet(decryptJsonWalletSync(json, password));\n    }\n  }, {\n    key: \"fromMnemonic\",\n    value: function fromMnemonic(mnemonic, path, wordlist) {\n      if (!path) {\n        path = defaultPath;\n      }\n      return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n  }]);\n  return Wallet;\n}(Signer);\nexport function verifyMessage(message, signature) {\n  return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n  return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}","map":{"version":3,"mappings":"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","names":["getAddress","Provider","Signer","arrayify","concat","hexDataSlice","isHexString","joinSignature","hashMessage","_TypedDataEncoder","defaultPath","HDNode","entropyToMnemonic","keccak256","defineReadOnly","resolveProperties","randomBytes","SigningKey","decryptJsonWallet","decryptJsonWalletSync","encryptKeystore","computeAddress","recoverAddress","serialize","Logger","version","logger","isAccount","value","privateKey","address","hasMnemonic","mnemonic","phrase","Wallet","provider","signingKey","publicKey","throwArgumentError","srcMnemonic","path","locale","node","fromMnemonic","derivePath","isSigningKey","curve","match","length","isProvider","_mnemonic","_signingKey","Promise","resolve","transaction","then","tx","from","signature","signDigest","message","domain","types","resolveNames","name","throwError","errors","UNSUPPORTED_OPERATION","operation","resolveName","populated","hash","password","options","progressCallback","Error","entropy","extraEntropy","json","account","wordlist","verifyMessage","verifyTypedData"],"sourceRoot":"","sources":["../src.ts/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}