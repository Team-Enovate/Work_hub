{"ast":null,"code":"'use strict';\n\nvar createStoreImpl = function createStoreImpl(createState) {\n  var state;\n  var listeners = new Set();\n  var setState = function setState(partial, replace) {\n    var nextState = typeof partial === 'function' ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      var _previousState = state;\n      state = (replace != null ? replace : typeof nextState !== 'object') ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(function (listener) {\n        return listener(state, _previousState);\n      });\n    }\n  };\n  var getState = function getState() {\n    return state;\n  };\n  var subscribe = function subscribe(listener) {\n    listeners.add(listener);\n    return function () {\n      return listeners.delete(listener);\n    };\n  };\n  var destroy = function destroy() {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.warn('[DEPRECATED] The destroy method will be unsupported in the future version. You should use unsubscribe function returned by subscribe. Everything will be garbage collected if store is garbage collected.');\n    }\n    listeners.clear();\n  };\n  var api = {\n    setState: setState,\n    getState: getState,\n    subscribe: subscribe,\n    destroy: destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n};\nvar createStore = function createStore(createState) {\n  return createState ? createStoreImpl(createState) : createStoreImpl;\n};\nvar vanilla = function vanilla(createState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    console.warn('[DEPRECATED] default export is deprecated, instead import { createStore } ...');\n  }\n  return createStore(createState);\n};\nexports.createStore = createStore;\nexports.default = vanilla;\n;\nmodule.exports = exports && exports.default || {}, Object.assign(module.exports, exports);","map":{"version":3,"names":["createStoreImpl","createState","state","listeners","Set","setState","partial","replace","nextState","Object","is","_previousState","assign","forEach","listener","getState","subscribe","add","delete","destroy","process","env","NODE_ENV","console","warn","clear","api","createStore","vanilla","exports","default","module"],"sources":["C:/Users/USER/Documents/Work_hub/node_modules/@wagmi/core/node_modules/zustand/vanilla.js"],"sourcesContent":["'use strict';\n\nvar createStoreImpl = function createStoreImpl(createState) {\n  var state;\n  var listeners = new Set();\n  var setState = function setState(partial, replace) {\n    var nextState = typeof partial === 'function' ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      var _previousState = state;\n      state = (replace != null ? replace : typeof nextState !== 'object') ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(function (listener) {\n        return listener(state, _previousState);\n      });\n    }\n  };\n  var getState = function getState() {\n    return state;\n  };\n  var subscribe = function subscribe(listener) {\n    listeners.add(listener);\n    return function () {\n      return listeners.delete(listener);\n    };\n  };\n  var destroy = function destroy() {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.warn('[DEPRECATED] The destroy method will be unsupported in the future version. You should use unsubscribe function returned by subscribe. Everything will be garbage collected if store is garbage collected.');\n    }\n    listeners.clear();\n  };\n  var api = {\n    setState: setState,\n    getState: getState,\n    subscribe: subscribe,\n    destroy: destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n};\nvar createStore = function createStore(createState) {\n  return createState ? createStoreImpl(createState) : createStoreImpl;\n};\nvar vanilla = (function (createState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    console.warn('[DEPRECATED] default export is deprecated, instead import { createStore } ...');\n  }\n  return createStore(createState);\n});\n\nexports.createStore = createStore;\nexports.default = vanilla;\n\n;(module.exports = (exports && exports.default) || {}),\n  Object.assign(module.exports, exports)\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,eAAe,GAAG,SAASA,eAAe,CAACC,WAAW,EAAE;EAC1D,IAAIC,KAAK;EACT,IAAIC,SAAS,GAAG,IAAIC,GAAG,EAAE;EACzB,IAAIC,QAAQ,GAAG,SAASA,QAAQ,CAACC,OAAO,EAAEC,OAAO,EAAE;IACjD,IAAIC,SAAS,GAAG,OAAOF,OAAO,KAAK,UAAU,GAAGA,OAAO,CAACJ,KAAK,CAAC,GAAGI,OAAO;IACxE,IAAI,CAACG,MAAM,CAACC,EAAE,CAACF,SAAS,EAAEN,KAAK,CAAC,EAAE;MAChC,IAAIS,cAAc,GAAGT,KAAK;MAC1BA,KAAK,GAAG,CAACK,OAAO,IAAI,IAAI,GAAGA,OAAO,GAAG,OAAOC,SAAS,KAAK,QAAQ,IAAIA,SAAS,GAAGC,MAAM,CAACG,MAAM,CAAC,CAAC,CAAC,EAAEV,KAAK,EAAEM,SAAS,CAAC;MACrHL,SAAS,CAACU,OAAO,CAAC,UAAUC,QAAQ,EAAE;QACpC,OAAOA,QAAQ,CAACZ,KAAK,EAAES,cAAc,CAAC;MACxC,CAAC,CAAC;IACJ;EACF,CAAC;EACD,IAAII,QAAQ,GAAG,SAASA,QAAQ,GAAG;IACjC,OAAOb,KAAK;EACd,CAAC;EACD,IAAIc,SAAS,GAAG,SAASA,SAAS,CAACF,QAAQ,EAAE;IAC3CX,SAAS,CAACc,GAAG,CAACH,QAAQ,CAAC;IACvB,OAAO,YAAY;MACjB,OAAOX,SAAS,CAACe,MAAM,CAACJ,QAAQ,CAAC;IACnC,CAAC;EACH,CAAC;EACD,IAAIK,OAAO,GAAG,SAASA,OAAO,GAAG;IAC/B,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzCC,OAAO,CAACC,IAAI,CAAC,2MAA2M,CAAC;IAC3N;IACArB,SAAS,CAACsB,KAAK,EAAE;EACnB,CAAC;EACD,IAAIC,GAAG,GAAG;IACRrB,QAAQ,EAAEA,QAAQ;IAClBU,QAAQ,EAAEA,QAAQ;IAClBC,SAAS,EAAEA,SAAS;IACpBG,OAAO,EAAEA;EACX,CAAC;EACDjB,KAAK,GAAGD,WAAW,CAACI,QAAQ,EAAEU,QAAQ,EAAEW,GAAG,CAAC;EAC5C,OAAOA,GAAG;AACZ,CAAC;AACD,IAAIC,WAAW,GAAG,SAASA,WAAW,CAAC1B,WAAW,EAAE;EAClD,OAAOA,WAAW,GAAGD,eAAe,CAACC,WAAW,CAAC,GAAGD,eAAe;AACrE,CAAC;AACD,IAAI4B,OAAO,GAAI,SAAXA,OAAO,CAAc3B,WAAW,EAAE;EACpC,IAAImB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzCC,OAAO,CAACC,IAAI,CAAC,+EAA+E,CAAC;EAC/F;EACA,OAAOG,WAAW,CAAC1B,WAAW,CAAC;AACjC,CAAE;AAEF4B,OAAO,CAACF,WAAW,GAAGA,WAAW;AACjCE,OAAO,CAACC,OAAO,GAAGF,OAAO;AAEzB;AAAEG,MAAM,CAACF,OAAO,GAAIA,OAAO,IAAIA,OAAO,CAACC,OAAO,IAAK,CAAC,CAAC,EACnDrB,MAAM,CAACG,MAAM,CAACmB,MAAM,CAACF,OAAO,EAAEA,OAAO,CAAC"},"metadata":{},"sourceType":"script"}