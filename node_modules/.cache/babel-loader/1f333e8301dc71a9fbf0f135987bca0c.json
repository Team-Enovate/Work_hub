{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { InjectedConnector } from \"./chunk-N7MKKIYR.js\";\nimport { __privateAdd, __privateGet, __privateSet, __publicField } from \"./chunk-5NCTPR6C.js\";\n\n// src/metaMask.ts\nimport { ConnectorNotFoundError, ResourceUnavailableError, UserRejectedRequestError, getClient } from \"@wagmi/core\";\nimport { getAddress } from \"ethers/lib/utils.js\";\nvar _UNSTABLE_shimOnConnectSelectAccount;\nvar MetaMaskConnector = /*#__PURE__*/function (_InjectedConnector) {\n  _inherits(MetaMaskConnector, _InjectedConnector);\n  var _super = _createSuper(MetaMaskConnector);\n  function MetaMaskConnector() {\n    var _this;\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      chains = _ref.chains,\n      options_ = _ref.options;\n    _classCallCheck(this, MetaMaskConnector);\n    var options = _objectSpread({\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider: function getProvider() {\n        function getReady(ethereum2) {\n          var isMetaMask = !!(ethereum2 === null || ethereum2 === void 0 ? void 0 : ethereum2.isMetaMask);\n          if (!isMetaMask) return;\n          if (ethereum2.isBraveWallet && !ethereum2._events && !ethereum2._state) return;\n          if (ethereum2.isApexWallet) return;\n          if (ethereum2.isAvalanche) return;\n          if (ethereum2.isKuCoinWallet) return;\n          if (ethereum2.isPortal) return;\n          if (ethereum2.isTokenPocket) return;\n          if (ethereum2.isTokenary) return;\n          return ethereum2;\n        }\n        if (typeof window === \"undefined\") return;\n        var ethereum = window.ethereum;\n        if (ethereum === null || ethereum === void 0 ? void 0 : ethereum.providers) return ethereum.providers.find(getReady);\n        return getReady(ethereum);\n      }\n    }, options_);\n    _this = _super.call(this, {\n      chains: chains,\n      options: options\n    });\n    __publicField(_assertThisInitialized(_this), \"id\", \"metaMask\");\n    __privateAdd(_assertThisInitialized(_this), _UNSTABLE_shimOnConnectSelectAccount, void 0);\n    __privateSet(_assertThisInitialized(_this), _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n    return _this;\n  }\n  _createClass(MetaMaskConnector, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _ref2,\n          chainId,\n          _this$options,\n          _getClient$storage,\n          _this$options2,\n          _getClient$storage2,\n          provider,\n          account,\n          isConnected,\n          accounts,\n          id,\n          unsupported,\n          chain,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, chainId = _ref2.chainId;\n              _context.prev = 1;\n              _context.next = 4;\n              return this.getProvider();\n            case 4:\n              provider = _context.sent;\n              if (provider) {\n                _context.next = 7;\n                break;\n              }\n              throw new ConnectorNotFoundError();\n            case 7:\n              if (provider.on) {\n                provider.on(\"accountsChanged\", this.onAccountsChanged);\n                provider.on(\"chainChanged\", this.onChainChanged);\n                provider.on(\"disconnect\", this.onDisconnect);\n              }\n              this.emit(\"message\", {\n                type: \"connecting\"\n              });\n              account = null;\n              if (!(__privateGet(this, _UNSTABLE_shimOnConnectSelectAccount) && ((_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.shimDisconnect) && !((_getClient$storage = getClient().storage) === null || _getClient$storage === void 0 ? void 0 : _getClient$storage.getItem(this.shimDisconnectKey)))) {\n                _context.next = 28;\n                break;\n              }\n              _context.next = 13;\n              return this.getAccount().catch(function () {\n                return null;\n              });\n            case 13:\n              account = _context.sent;\n              isConnected = !!account;\n              if (!isConnected) {\n                _context.next = 28;\n                break;\n              }\n              _context.prev = 16;\n              _context.next = 19;\n              return provider.request({\n                method: \"wallet_requestPermissions\",\n                params: [{\n                  eth_accounts: {}\n                }]\n              });\n            case 19:\n              _context.next = 21;\n              return this.getAccount();\n            case 21:\n              account = _context.sent;\n              _context.next = 28;\n              break;\n            case 24:\n              _context.prev = 24;\n              _context.t0 = _context[\"catch\"](16);\n              if (!this.isUserRejectedRequestError(_context.t0)) {\n                _context.next = 28;\n                break;\n              }\n              throw new UserRejectedRequestError(_context.t0);\n            case 28:\n              if (account) {\n                _context.next = 33;\n                break;\n              }\n              _context.next = 31;\n              return provider.request({\n                method: \"eth_requestAccounts\"\n              });\n            case 31:\n              accounts = _context.sent;\n              account = getAddress(accounts[0]);\n            case 33:\n              _context.next = 35;\n              return this.getChainId();\n            case 35:\n              id = _context.sent;\n              unsupported = this.isChainUnsupported(id);\n              if (!(chainId && id !== chainId)) {\n                _context.next = 43;\n                break;\n              }\n              _context.next = 40;\n              return this.switchChain(chainId);\n            case 40:\n              chain = _context.sent;\n              id = chain.id;\n              unsupported = this.isChainUnsupported(id);\n            case 43:\n              if ((_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2.shimDisconnect) (_getClient$storage2 = getClient().storage) === null || _getClient$storage2 === void 0 ? void 0 : _getClient$storage2.setItem(this.shimDisconnectKey, true);\n              return _context.abrupt(\"return\", {\n                account: account,\n                chain: {\n                  id: id,\n                  unsupported: unsupported\n                },\n                provider: provider\n              });\n            case 47:\n              _context.prev = 47;\n              _context.t1 = _context[\"catch\"](1);\n              if (!this.isUserRejectedRequestError(_context.t1)) {\n                _context.next = 51;\n                break;\n              }\n              throw new UserRejectedRequestError(_context.t1);\n            case 51:\n              if (!(_context.t1.code === -32002)) {\n                _context.next = 53;\n                break;\n              }\n              throw new ResourceUnavailableError(_context.t1);\n            case 53:\n              throw _context.t1;\n            case 54:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 47], [16, 24]]);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }]);\n  return MetaMaskConnector;\n}(InjectedConnector);\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\nexport { MetaMaskConnector };","map":{"version":3,"names":["InjectedConnector","__privateAdd","__privateGet","__privateSet","__publicField","ConnectorNotFoundError","ResourceUnavailableError","UserRejectedRequestError","getClient","getAddress","_UNSTABLE_shimOnConnectSelectAccount","MetaMaskConnector","chains","options_","options","name","shimDisconnect","shimChainChangedDisconnect","getProvider","getReady","ethereum2","isMetaMask","isBraveWallet","_events","_state","isApexWallet","isAvalanche","isKuCoinWallet","isPortal","isTokenPocket","isTokenary","window","ethereum","providers","find","UNSTABLE_shimOnConnectSelectAccount","chainId","provider","on","onAccountsChanged","onChainChanged","onDisconnect","emit","type","account","storage","getItem","shimDisconnectKey","getAccount","catch","isConnected","request","method","params","eth_accounts","isUserRejectedRequestError","accounts","getChainId","id","unsupported","isChainUnsupported","switchChain","chain","setItem","code","WeakMap"],"sources":["C:/Users/USER/Documents/Work_hub/node_modules/@wagmi/connectors/dist/metaMask.js"],"sourcesContent":["import {\n  InjectedConnector\n} from \"./chunk-N7MKKIYR.js\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateSet,\n  __publicField\n} from \"./chunk-5NCTPR6C.js\";\n\n// src/metaMask.ts\nimport {\n  ConnectorNotFoundError,\n  ResourceUnavailableError,\n  UserRejectedRequestError,\n  getClient\n} from \"@wagmi/core\";\nimport { getAddress } from \"ethers/lib/utils.js\";\nvar _UNSTABLE_shimOnConnectSelectAccount;\nvar MetaMaskConnector = class extends InjectedConnector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider() {\n        function getReady(ethereum2) {\n          const isMetaMask = !!ethereum2?.isMetaMask;\n          if (!isMetaMask)\n            return;\n          if (ethereum2.isBraveWallet && !ethereum2._events && !ethereum2._state)\n            return;\n          if (ethereum2.isApexWallet)\n            return;\n          if (ethereum2.isAvalanche)\n            return;\n          if (ethereum2.isKuCoinWallet)\n            return;\n          if (ethereum2.isPortal)\n            return;\n          if (ethereum2.isTokenPocket)\n            return;\n          if (ethereum2.isTokenary)\n            return;\n          return ethereum2;\n        }\n        if (typeof window === \"undefined\")\n          return;\n        const ethereum = window.ethereum;\n        if (ethereum?.providers)\n          return ethereum.providers.find(getReady);\n        return getReady(ethereum);\n      },\n      ...options_\n    };\n    super({ chains, options });\n    __publicField(this, \"id\", \"metaMask\");\n    __privateAdd(this, _UNSTABLE_shimOnConnectSelectAccount, void 0);\n    __privateSet(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      let account = null;\n      if (__privateGet(this, _UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !getClient().storage?.getItem(this.shimDisconnectKey)) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected)\n          try {\n            await provider.request({\n              method: \"wallet_requestPermissions\",\n              params: [{ eth_accounts: {} }]\n            });\n            account = await this.getAccount();\n          } catch (error) {\n            if (this.isUserRejectedRequestError(error))\n              throw new UserRejectedRequestError(error);\n          }\n      }\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = getAddress(accounts[0]);\n      }\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options?.shimDisconnect)\n        getClient().storage?.setItem(this.shimDisconnectKey, true);\n      return { account, chain: { id, unsupported }, provider };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n};\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\nexport {\n  MetaMaskConnector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}