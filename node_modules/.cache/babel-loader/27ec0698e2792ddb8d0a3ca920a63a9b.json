{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { EventEmitter } from \"events\";\nimport { IJsonRpcProvider, isJsonRpcResponse, formatJsonRpcRequest, isJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nexport var JsonRpcProvider = /*#__PURE__*/function (_IJsonRpcProvider) {\n  _inherits(JsonRpcProvider, _IJsonRpcProvider);\n  var _super = _createSuper(JsonRpcProvider);\n  function JsonRpcProvider(connection) {\n    var _this;\n    _classCallCheck(this, JsonRpcProvider);\n    _this = _super.call(this, connection);\n    _this.events = new EventEmitter();\n    _this.hasRegisteredEventListeners = false;\n    _this.connection = _this.setConnection(connection);\n    if (_this.connection.connected) {\n      _this.registerEventListeners();\n    }\n    return _this;\n  }\n  _createClass(JsonRpcProvider, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var connection,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              connection = _args.length > 0 && _args[0] !== undefined ? _args[0] : this.connection;\n              _context.next = 3;\n              return this.open(connection);\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.close();\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n      return disconnect;\n    }()\n  }, {\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n  }, {\n    key: \"once\",\n    value: function once(event, listener) {\n      this.events.once(event, listener);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      this.events.off(event, listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(event, listener) {\n      this.events.removeListener(event, listener);\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_request, context) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", this.requestStrict(formatJsonRpcRequest(_request.method, _request.params || []), context));\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function request(_x, _x2) {\n        return _request2.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"requestStrict\",\n    value: function () {\n      var _requestStrict = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request, context) {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(resolve, reject) {\n                  return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                    while (1) switch (_context4.prev = _context4.next) {\n                      case 0:\n                        if (_this2.connection.connected) {\n                          _context4.next = 9;\n                          break;\n                        }\n                        _context4.prev = 1;\n                        _context4.next = 4;\n                        return _this2.open();\n                      case 4:\n                        _context4.next = 9;\n                        break;\n                      case 6:\n                        _context4.prev = 6;\n                        _context4.t0 = _context4[\"catch\"](1);\n                        reject(_context4.t0);\n                      case 9:\n                        _this2.events.on(\"\".concat(request.id), function (response) {\n                          if (isJsonRpcError(response)) {\n                            reject(response.error);\n                          } else {\n                            resolve(response.result);\n                          }\n                        });\n                        _context4.prev = 10;\n                        _context4.next = 13;\n                        return _this2.connection.send(request, context);\n                      case 13:\n                        _context4.next = 18;\n                        break;\n                      case 15:\n                        _context4.prev = 15;\n                        _context4.t1 = _context4[\"catch\"](10);\n                        reject(_context4.t1);\n                      case 18:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }, _callee4, null, [[1, 6], [10, 15]]);\n                }));\n                return function (_x5, _x6) {\n                  return _ref.apply(this, arguments);\n                };\n              }()));\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      function requestStrict(_x3, _x4) {\n        return _requestStrict.apply(this, arguments);\n      }\n      return requestStrict;\n    }()\n  }, {\n    key: \"setConnection\",\n    value: function setConnection() {\n      var connection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.connection;\n      return connection;\n    }\n  }, {\n    key: \"onPayload\",\n    value: function onPayload(payload) {\n      this.events.emit(\"payload\", payload);\n      if (isJsonRpcResponse(payload)) {\n        this.events.emit(\"\".concat(payload.id), payload);\n      } else {\n        this.events.emit(\"message\", {\n          type: payload.method,\n          data: payload.params\n        });\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var connection,\n          _args6 = arguments;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              connection = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : this.connection;\n              if (!(this.connection === connection && this.connection.connected)) {\n                _context6.next = 3;\n                break;\n              }\n              return _context6.abrupt(\"return\");\n            case 3:\n              if (this.connection.connected) this.close();\n              if (!(typeof connection === \"string\")) {\n                _context6.next = 8;\n                break;\n              }\n              _context6.next = 7;\n              return this.connection.open(connection);\n            case 7:\n              connection = this.connection;\n            case 8:\n              this.connection = this.setConnection(connection);\n              _context6.next = 11;\n              return this.connection.open();\n            case 11:\n              this.registerEventListeners();\n              this.events.emit(\"connect\");\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function open() {\n        return _open.apply(this, arguments);\n      }\n      return open;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return this.connection.close();\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n  }, {\n    key: \"registerEventListeners\",\n    value: function registerEventListeners() {\n      var _this3 = this;\n      if (this.hasRegisteredEventListeners) return;\n      this.connection.on(\"payload\", function (payload) {\n        return _this3.onPayload(payload);\n      });\n      this.connection.on(\"close\", function () {\n        return _this3.events.emit(\"disconnect\");\n      });\n      this.connection.on(\"error\", function (error) {\n        return _this3.events.emit(\"error\", error);\n      });\n      this.hasRegisteredEventListeners = true;\n    }\n  }]);\n  return JsonRpcProvider;\n}(IJsonRpcProvider);\nexport default JsonRpcProvider;","map":{"version":3,"mappings":"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","names":["EventEmitter","IJsonRpcProvider","isJsonRpcResponse","formatJsonRpcRequest","isJsonRpcError","JsonRpcProvider","connection","setConnection","connected","registerEventListeners","open","close","event","listener","events","on","once","off","removeListener","request","context","requestStrict","method","params","Promise","resolve","reject","id","response","error","result","send","payload","emit","type","data","hasRegisteredEventListeners","onPayload"],"sourceRoot":"","sources":["../../src/provider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}