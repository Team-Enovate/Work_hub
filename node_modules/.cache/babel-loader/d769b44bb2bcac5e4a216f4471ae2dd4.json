{"ast":null,"code":"var _asyncToGenerator = require(\"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _inherits = require(\"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar _createSuper = require(\"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar pify = require('pify');\nvar BaseBlockTracker = require('./base');\nvar sec = 1000;\nvar PollingBlockTracker = /*#__PURE__*/function (_BaseBlockTracker) {\n  \"use strict\";\n\n  _inherits(PollingBlockTracker, _BaseBlockTracker);\n  var _super = _createSuper(PollingBlockTracker);\n  function PollingBlockTracker() {\n    var _this;\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, PollingBlockTracker);\n    // parse + validate args\n    if (!opts.provider) throw new Error('PollingBlockTracker - no provider specified.');\n    var pollingInterval = opts.pollingInterval || 20 * sec;\n    var retryTimeout = opts.retryTimeout || pollingInterval / 10;\n    var keepEventLoopActive = opts.keepEventLoopActive !== undefined ? opts.keepEventLoopActive : true;\n    var setSkipCacheFlag = opts.setSkipCacheFlag || false;\n    // BaseBlockTracker constructor\n    _this = _super.call(this, Object.assign({\n      blockResetDuration: pollingInterval\n    }, opts));\n    // config\n    _this._provider = opts.provider;\n    _this._pollingInterval = pollingInterval;\n    _this._retryTimeout = retryTimeout;\n    _this._keepEventLoopActive = keepEventLoopActive;\n    _this._setSkipCacheFlag = setSkipCacheFlag;\n    return _this;\n  }\n\n  //\n  // public\n  //\n\n  // trigger block polling\n  _createClass(PollingBlockTracker, [{\n    key: \"checkForLatestBlock\",\n    value: function () {\n      var _checkForLatestBlock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this._updateLatestBlock();\n            case 2:\n              _context.next = 4;\n              return this.getLatestBlock();\n            case 4:\n              return _context.abrupt(\"return\", _context.sent);\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function checkForLatestBlock() {\n        return _checkForLatestBlock.apply(this, arguments);\n      }\n      return checkForLatestBlock;\n    }() //\n    // private\n    //\n  }, {\n    key: \"_start\",\n    value: function _start() {\n      var _this2 = this;\n      this._performSync().catch(function (err) {\n        return _this2.emit('error', err);\n      });\n    }\n  }, {\n    key: \"_performSync\",\n    value: function () {\n      var _performSync2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var newErr;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!this._isRunning) {\n                _context2.next = 16;\n                break;\n              }\n              _context2.prev = 1;\n              _context2.next = 4;\n              return this._updateLatestBlock();\n            case 4:\n              _context2.next = 6;\n              return timeout(this._pollingInterval, !this._keepEventLoopActive);\n            case 6:\n              _context2.next = 14;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              newErr = new Error(\"PollingBlockTracker - encountered an error while attempting to update latest block:\\n\".concat(_context2.t0.stack));\n              try {\n                this.emit('error', newErr);\n              } catch (emitErr) {\n                console.error(newErr);\n              }\n              _context2.next = 14;\n              return timeout(this._retryTimeout, !this._keepEventLoopActive);\n            case 14:\n              _context2.next = 0;\n              break;\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[1, 8]]);\n      }));\n      function _performSync() {\n        return _performSync2.apply(this, arguments);\n      }\n      return _performSync;\n    }()\n  }, {\n    key: \"_updateLatestBlock\",\n    value: function () {\n      var _updateLatestBlock2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var latestBlock;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this._fetchLatestBlock();\n            case 2:\n              latestBlock = _context3.sent;\n              this._newPotentialLatest(latestBlock);\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function _updateLatestBlock() {\n        return _updateLatestBlock2.apply(this, arguments);\n      }\n      return _updateLatestBlock;\n    }()\n  }, {\n    key: \"_fetchLatestBlock\",\n    value: function () {\n      var _fetchLatestBlock2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _this3 = this;\n        var req, res;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              req = {\n                jsonrpc: \"2.0\",\n                id: 1,\n                method: 'eth_blockNumber',\n                params: []\n              };\n              if (this._setSkipCacheFlag) req.skipCache = true;\n              _context4.next = 4;\n              return pify(function (cb) {\n                return _this3._provider.sendAsync(req, cb);\n              })();\n            case 4:\n              res = _context4.sent;\n              if (!res.error) {\n                _context4.next = 7;\n                break;\n              }\n              throw new Error(\"PollingBlockTracker - encountered error fetching block:\\n\".concat(res.error));\n            case 7:\n              return _context4.abrupt(\"return\", res.result);\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function _fetchLatestBlock() {\n        return _fetchLatestBlock2.apply(this, arguments);\n      }\n      return _fetchLatestBlock;\n    }()\n  }]);\n  return PollingBlockTracker;\n}(BaseBlockTracker);\nmodule.exports = PollingBlockTracker;\nfunction timeout(duration, unref) {\n  return new Promise(function (resolve) {\n    var timoutRef = setTimeout(resolve, duration);\n    // don't keep process open\n    if (timoutRef.unref && unref) {\n      timoutRef.unref();\n    }\n  });\n}","map":{"version":3,"names":["pify","require","BaseBlockTracker","sec","PollingBlockTracker","opts","provider","Error","pollingInterval","retryTimeout","keepEventLoopActive","undefined","setSkipCacheFlag","Object","assign","blockResetDuration","_provider","_pollingInterval","_retryTimeout","_keepEventLoopActive","_setSkipCacheFlag","_updateLatestBlock","getLatestBlock","_performSync","catch","err","emit","_isRunning","timeout","newErr","stack","emitErr","console","error","_fetchLatestBlock","latestBlock","_newPotentialLatest","req","jsonrpc","id","method","params","skipCache","cb","sendAsync","res","result","module","exports","duration","unref","Promise","resolve","timoutRef","setTimeout"],"sources":["C:/Users/USER/Documents/Work_hub/node_modules/eth-block-tracker/src/polling.js"],"sourcesContent":["const pify = require('pify')\nconst BaseBlockTracker = require('./base')\n\nconst sec = 1000\n\nclass PollingBlockTracker extends BaseBlockTracker {\n\n  constructor (opts = {}) {\n    // parse + validate args\n    if (!opts.provider) throw new Error('PollingBlockTracker - no provider specified.')\n    const pollingInterval = opts.pollingInterval || 20 * sec\n    const retryTimeout = opts.retryTimeout || pollingInterval / 10\n    const keepEventLoopActive = opts.keepEventLoopActive !== undefined ? opts.keepEventLoopActive : true\n    const setSkipCacheFlag = opts.setSkipCacheFlag || false\n    // BaseBlockTracker constructor\n    super(Object.assign({\n      blockResetDuration: pollingInterval,\n    }, opts))\n    // config\n    this._provider = opts.provider\n    this._pollingInterval = pollingInterval\n    this._retryTimeout = retryTimeout\n    this._keepEventLoopActive = keepEventLoopActive\n    this._setSkipCacheFlag = setSkipCacheFlag\n  }\n\n  //\n  // public\n  //\n\n  // trigger block polling\n  async checkForLatestBlock () {\n    await this._updateLatestBlock()\n    return await this.getLatestBlock()\n  }\n\n  //\n  // private\n  //\n\n  _start () {\n    this._performSync().catch(err => this.emit('error', err))\n  }\n\n  async _performSync () {\n    while (this._isRunning) {\n      try {\n        await this._updateLatestBlock()\n        await timeout(this._pollingInterval, !this._keepEventLoopActive)\n      } catch (err) {\n        const newErr = new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\\n${err.stack}`)\n        try {\n          this.emit('error', newErr)\n        } catch (emitErr) {\n          console.error(newErr)\n        }\n        await timeout(this._retryTimeout, !this._keepEventLoopActive)\n      }\n    }\n  }\n\n  async _updateLatestBlock () {\n    // fetch + set latest block\n    const latestBlock = await this._fetchLatestBlock()\n    this._newPotentialLatest(latestBlock)\n  }\n\n  async _fetchLatestBlock () {\n    const req = { jsonrpc: \"2.0\", id: 1, method: 'eth_blockNumber', params: [] }\n    if (this._setSkipCacheFlag) req.skipCache = true\n    const res = await pify((cb) => this._provider.sendAsync(req, cb))()\n    if (res.error) throw new Error(`PollingBlockTracker - encountered error fetching block:\\n${res.error}`)\n    return res.result\n  }\n\n}\n\nmodule.exports = PollingBlockTracker\n\nfunction timeout (duration, unref) {\n  return new Promise(resolve => {\n    const timoutRef = setTimeout(resolve, duration)\n    // don't keep process open\n    if (timoutRef.unref && unref) {\n      timoutRef.unref()\n    }\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}