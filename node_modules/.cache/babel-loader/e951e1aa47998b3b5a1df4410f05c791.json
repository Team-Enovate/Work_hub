{"ast":null,"code":"\"use strict\";\n\nimport _assertThisInitialized from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Documents\\\\Work_hub\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { ForkEvent, Provider } from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork as _getNetwork } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport bech32 from \"bech32\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { Formatter } from \"./formatter\";\nvar MAX_CCIP_REDIRECTS = 10;\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n  if (topic == null) {\n    return \"null\";\n  }\n  if (hexDataLength(topic) !== 32) {\n    logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n  }\n  return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n  // Remove trailing null AND-topics; they are redundant\n  topics = topics.slice();\n  while (topics.length > 0 && topics[topics.length - 1] == null) {\n    topics.pop();\n  }\n  return topics.map(function (topic) {\n    if (Array.isArray(topic)) {\n      // Only track unique OR-topics\n      var unique = {};\n      topic.forEach(function (topic) {\n        unique[checkTopic(topic)] = true;\n      });\n      // The order of OR-topics does not matter\n      var sorted = Object.keys(unique);\n      sorted.sort();\n      return sorted.join(\"|\");\n    } else {\n      return checkTopic(topic);\n    }\n  }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n  if (data === \"\") {\n    return [];\n  }\n  return data.split(/&/g).map(function (topic) {\n    if (topic === \"\") {\n      return [];\n    }\n    var comps = topic.split(\"|\").map(function (topic) {\n      return topic === \"null\" ? null : topic;\n    });\n    return comps.length === 1 ? comps[0] : comps;\n  });\n}\nfunction getEventTag(eventName) {\n  if (typeof eventName === \"string\") {\n    eventName = eventName.toLowerCase();\n    if (hexDataLength(eventName) === 32) {\n      return \"tx:\" + eventName;\n    }\n    if (eventName.indexOf(\":\") === -1) {\n      return eventName;\n    }\n  } else if (Array.isArray(eventName)) {\n    return \"filter:*:\" + serializeTopics(eventName);\n  } else if (ForkEvent.isForkEvent(eventName)) {\n    logger.warn(\"not implemented\");\n    throw new Error(\"not implemented\");\n  } else if (eventName && typeof eventName === \"object\") {\n    return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n  }\n  throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n  return new Date().getTime();\n}\nfunction stall(duration) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, duration);\n  });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nvar PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nexport var Event = /*#__PURE__*/function () {\n  function Event(tag, listener, once) {\n    _classCallCheck(this, Event);\n    defineReadOnly(this, \"tag\", tag);\n    defineReadOnly(this, \"listener\", listener);\n    defineReadOnly(this, \"once\", once);\n    this._lastBlockNumber = -2;\n    this._inflight = false;\n  }\n  _createClass(Event, [{\n    key: \"event\",\n    get: function get() {\n      switch (this.type) {\n        case \"tx\":\n          return this.hash;\n        case \"filter\":\n          return this.filter;\n      }\n      return this.tag;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.tag.split(\":\")[0];\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      var comps = this.tag.split(\":\");\n      if (comps[0] !== \"tx\") {\n        return null;\n      }\n      return comps[1];\n    }\n  }, {\n    key: \"filter\",\n    get: function get() {\n      var comps = this.tag.split(\":\");\n      if (comps[0] !== \"filter\") {\n        return null;\n      }\n      var address = comps[1];\n      var topics = deserializeTopics(comps[2]);\n      var filter = {};\n      if (topics.length > 0) {\n        filter.topics = topics;\n      }\n      if (address && address !== \"*\") {\n        filter.address = address;\n      }\n      return filter;\n    }\n  }, {\n    key: \"pollable\",\n    value: function pollable() {\n      return this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0;\n    }\n  }]);\n  return Event;\n}();\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nvar coinInfos = {\n  \"0\": {\n    symbol: \"btc\",\n    p2pkh: 0x00,\n    p2sh: 0x05,\n    prefix: \"bc\"\n  },\n  \"2\": {\n    symbol: \"ltc\",\n    p2pkh: 0x30,\n    p2sh: 0x32,\n    prefix: \"ltc\"\n  },\n  \"3\": {\n    symbol: \"doge\",\n    p2pkh: 0x1e,\n    p2sh: 0x16\n  },\n  \"60\": {\n    symbol: \"eth\",\n    ilk: \"eth\"\n  },\n  \"61\": {\n    symbol: \"etc\",\n    ilk: \"eth\"\n  },\n  \"700\": {\n    symbol: \"xdai\",\n    ilk: \"eth\"\n  }\n};\nfunction bytes32ify(value) {\n  return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n  return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nvar matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nvar matchers = [new RegExp(\"^(https):/\\/(.*)$\", \"i\"), new RegExp(\"^(data):(.*)$\", \"i\"), matcherIpfs, new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\")];\nfunction _parseString(result, start) {\n  try {\n    return toUtf8String(_parseBytes(result, start));\n  } catch (error) {}\n  return null;\n}\nfunction _parseBytes(result, start) {\n  if (result === \"0x\") {\n    return null;\n  }\n  var offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n  var length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n  return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link) {\n  if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n    link = link.substring(12);\n  } else if (link.match(/^ipfs:\\/\\//i)) {\n    link = link.substring(7);\n  } else {\n    logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n  }\n  return \"https://gateway.ipfs.io/ipfs/\".concat(link);\n}\nfunction numPad(value) {\n  var result = arrayify(value);\n  if (result.length > 32) {\n    throw new Error(\"internal; should not happen\");\n  }\n  var padded = new Uint8Array(32);\n  padded.set(result, 32 - result.length);\n  return padded;\n}\nfunction bytesPad(value) {\n  if (value.length % 32 === 0) {\n    return value;\n  }\n  var result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n  result.set(value);\n  return result;\n}\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas) {\n  var result = [];\n  var byteCount = 0;\n  // Add place-holders for pointers as we add items\n  for (var i = 0; i < datas.length; i++) {\n    result.push(null);\n    byteCount += 32;\n  }\n  for (var _i = 0; _i < datas.length; _i++) {\n    var data = arrayify(datas[_i]);\n    // Update the bytes offset\n    result[_i] = numPad(byteCount);\n    // The length and padded value of data\n    result.push(numPad(data.length));\n    result.push(bytesPad(data));\n    byteCount += 32 + Math.ceil(data.length / 32) * 32;\n  }\n  return hexConcat(result);\n}\nexport var Resolver = /*#__PURE__*/function () {\n  // The resolvedAddress is only for creating a ReverseLookup resolver\n  function Resolver(provider, address, name, resolvedAddress) {\n    _classCallCheck(this, Resolver);\n    defineReadOnly(this, \"provider\", provider);\n    defineReadOnly(this, \"name\", name);\n    defineReadOnly(this, \"address\", provider.formatter.address(address));\n    defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n  }\n  _createClass(Resolver, [{\n    key: \"supportsWildcard\",\n    value: function supportsWildcard() {\n      var _this = this;\n      if (!this._supportsEip2544) {\n        // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n        this._supportsEip2544 = this.provider.call({\n          to: this.address,\n          data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n        }).then(function (result) {\n          return BigNumber.from(result).eq(1);\n        }).catch(function (error) {\n          if (error.code === Logger.errors.CALL_EXCEPTION) {\n            return false;\n          }\n          // Rethrow the error: link is down, etc. Let future attempts retry.\n          _this._supportsEip2544 = null;\n          throw error;\n        });\n      }\n      return this._supportsEip2544;\n    }\n  }, {\n    key: \"_fetch\",\n    value: function _fetch(selector, parameters) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var tx, parseBytes, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              // e.g. keccak256(\"addr(bytes32,uint256)\")\n              tx = {\n                to: this.address,\n                ccipReadEnabled: true,\n                data: hexConcat([selector, namehash(this.name), parameters || \"0x\"])\n              }; // Wildcard support; use EIP-2544 to resolve the request\n              parseBytes = false;\n              _context.next = 4;\n              return this.supportsWildcard();\n            case 4:\n              if (!_context.sent) {\n                _context.next = 7;\n                break;\n              }\n              parseBytes = true;\n              // selector(\"resolve(bytes,bytes)\")\n              tx.data = hexConcat([\"0x9061b923\", encodeBytes([dnsEncode(this.name), tx.data])]);\n            case 7:\n              _context.prev = 7;\n              _context.next = 10;\n              return this.provider.call(tx);\n            case 10:\n              result = _context.sent;\n              if (arrayify(result).length % 32 === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                  transaction: tx,\n                  data: result\n                });\n              }\n              if (parseBytes) {\n                result = _parseBytes(result, 0);\n              }\n              return _context.abrupt(\"return\", result);\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](7);\n              if (!(_context.t0.code === Logger.errors.CALL_EXCEPTION)) {\n                _context.next = 20;\n                break;\n              }\n              return _context.abrupt(\"return\", null);\n            case 20:\n              throw _context.t0;\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[7, 16]]);\n      }));\n    }\n  }, {\n    key: \"_fetchBytes\",\n    value: function _fetchBytes(selector, parameters) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this._fetch(selector, parameters);\n            case 2:\n              result = _context2.sent;\n              if (!(result != null)) {\n                _context2.next = 5;\n                break;\n              }\n              return _context2.abrupt(\"return\", _parseBytes(result, 0));\n            case 5:\n              return _context2.abrupt(\"return\", null);\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"_getAddress\",\n    value: function _getAddress(coinType, hexBytes) {\n      var coinInfo = coinInfos[String(coinType)];\n      if (coinInfo == null) {\n        logger.throwError(\"unsupported coin type: \".concat(coinType), Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"getAddress(\".concat(coinType, \")\")\n        });\n      }\n      if (coinInfo.ilk === \"eth\") {\n        return this.provider.formatter.address(hexBytes);\n      }\n      var bytes = arrayify(hexBytes);\n      // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n      if (coinInfo.p2pkh != null) {\n        var p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n        if (p2pkh) {\n          var length = parseInt(p2pkh[1], 16);\n          if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n            return base58Encode(concat([[coinInfo.p2pkh], \"0x\" + p2pkh[2]]));\n          }\n        }\n      }\n      // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n      if (coinInfo.p2sh != null) {\n        var p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n        if (p2sh) {\n          var _length = parseInt(p2sh[1], 16);\n          if (p2sh[2].length === _length * 2 && _length >= 1 && _length <= 75) {\n            return base58Encode(concat([[coinInfo.p2sh], \"0x\" + p2sh[2]]));\n          }\n        }\n      }\n      // Bech32\n      if (coinInfo.prefix != null) {\n        var _length2 = bytes[1];\n        // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n        var _version = bytes[0];\n        if (_version === 0x00) {\n          if (_length2 !== 20 && _length2 !== 32) {\n            _version = -1;\n          }\n        } else {\n          _version = -1;\n        }\n        if (_version >= 0 && bytes.length === 2 + _length2 && _length2 >= 1 && _length2 <= 75) {\n          var words = bech32.toWords(bytes.slice(2));\n          words.unshift(_version);\n          return bech32.encode(coinInfo.prefix, words);\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"getAddress\",\n    value: function getAddress(coinType) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var result, hexBytes, address;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (coinType == null) {\n                coinType = 60;\n              }\n              // If Ethereum, use the standard `addr(bytes32)`\n              if (!(coinType === 60)) {\n                _context3.next = 16;\n                break;\n              }\n              _context3.prev = 2;\n              _context3.next = 5;\n              return this._fetch(\"0x3b3b57de\");\n            case 5:\n              result = _context3.sent;\n              if (!(result === \"0x\" || result === HashZero)) {\n                _context3.next = 8;\n                break;\n              }\n              return _context3.abrupt(\"return\", null);\n            case 8:\n              return _context3.abrupt(\"return\", this.provider.formatter.callAddress(result));\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](2);\n              if (!(_context3.t0.code === Logger.errors.CALL_EXCEPTION)) {\n                _context3.next = 15;\n                break;\n              }\n              return _context3.abrupt(\"return\", null);\n            case 15:\n              throw _context3.t0;\n            case 16:\n              _context3.next = 18;\n              return this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            case 18:\n              hexBytes = _context3.sent;\n              if (!(hexBytes == null || hexBytes === \"0x\")) {\n                _context3.next = 21;\n                break;\n              }\n              return _context3.abrupt(\"return\", null);\n            case 21:\n              // Compute the address\n              address = this._getAddress(coinType, hexBytes);\n              if (address == null) {\n                logger.throwError(\"invalid or unsupported coin data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                  operation: \"getAddress(\".concat(coinType, \")\"),\n                  coinType: coinType,\n                  data: hexBytes\n                });\n              }\n              return _context3.abrupt(\"return\", address);\n            case 24:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[2, 11]]);\n      }));\n    }\n  }, {\n    key: \"getAvatar\",\n    value: function getAvatar() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var linkage, avatar, i, match, scheme, selector, owner, comps, addr, tokenId, tokenOwner, balance, tx, metadataUrl, metadata, imageUrl, ipfs;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              linkage = [{\n                type: \"name\",\n                content: this.name\n              }];\n              _context4.prev = 1;\n              _context4.next = 4;\n              return this.getText(\"avatar\");\n            case 4:\n              avatar = _context4.sent;\n              if (!(avatar == null)) {\n                _context4.next = 7;\n                break;\n              }\n              return _context4.abrupt(\"return\", null);\n            case 7:\n              i = 0;\n            case 8:\n              if (!(i < matchers.length)) {\n                _context4.next = 91;\n                break;\n              }\n              match = avatar.match(matchers[i]);\n              if (!(match == null)) {\n                _context4.next = 12;\n                break;\n              }\n              return _context4.abrupt(\"continue\", 88);\n            case 12:\n              scheme = match[1].toLowerCase();\n              _context4.t0 = scheme;\n              _context4.next = _context4.t0 === \"https\" ? 16 : _context4.t0 === \"data\" ? 18 : _context4.t0 === \"ipfs\" ? 20 : _context4.t0 === \"erc721\" ? 22 : _context4.t0 === \"erc1155\" ? 22 : 88;\n              break;\n            case 16:\n              linkage.push({\n                type: \"url\",\n                content: avatar\n              });\n              return _context4.abrupt(\"return\", {\n                linkage: linkage,\n                url: avatar\n              });\n            case 18:\n              linkage.push({\n                type: \"data\",\n                content: avatar\n              });\n              return _context4.abrupt(\"return\", {\n                linkage: linkage,\n                url: avatar\n              });\n            case 20:\n              linkage.push({\n                type: \"ipfs\",\n                content: avatar\n              });\n              return _context4.abrupt(\"return\", {\n                linkage: linkage,\n                url: getIpfsLink(avatar)\n              });\n            case 22:\n              // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n              selector = scheme === \"erc721\" ? \"0xc87b56dd\" : \"0x0e89341c\";\n              linkage.push({\n                type: scheme,\n                content: avatar\n              });\n              // The owner of this name\n              _context4.t1 = this._resolvedAddress;\n              if (_context4.t1) {\n                _context4.next = 29;\n                break;\n              }\n              _context4.next = 28;\n              return this.getAddress();\n            case 28:\n              _context4.t1 = _context4.sent;\n            case 29:\n              owner = _context4.t1;\n              comps = (match[2] || \"\").split(\"/\");\n              if (!(comps.length !== 2)) {\n                _context4.next = 33;\n                break;\n              }\n              return _context4.abrupt(\"return\", null);\n            case 33:\n              _context4.next = 35;\n              return this.provider.formatter.address(comps[0]);\n            case 35:\n              addr = _context4.sent;\n              tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32); // Check that this account owns the token\n              if (!(scheme === \"erc721\")) {\n                _context4.next = 48;\n                break;\n              }\n              _context4.t2 = this.provider.formatter;\n              _context4.next = 41;\n              return this.provider.call({\n                to: addr,\n                data: hexConcat([\"0x6352211e\", tokenId])\n              });\n            case 41:\n              _context4.t3 = _context4.sent;\n              tokenOwner = _context4.t2.callAddress.call(_context4.t2, _context4.t3);\n              if (!(owner !== tokenOwner)) {\n                _context4.next = 45;\n                break;\n              }\n              return _context4.abrupt(\"return\", null);\n            case 45:\n              linkage.push({\n                type: \"owner\",\n                content: tokenOwner\n              });\n              _context4.next = 57;\n              break;\n            case 48:\n              if (!(scheme === \"erc1155\")) {\n                _context4.next = 57;\n                break;\n              }\n              _context4.t4 = BigNumber;\n              _context4.next = 52;\n              return this.provider.call({\n                to: addr,\n                data: hexConcat([\"0x00fdd58e\", hexZeroPad(owner, 32), tokenId])\n              });\n            case 52:\n              _context4.t5 = _context4.sent;\n              balance = _context4.t4.from.call(_context4.t4, _context4.t5);\n              if (!balance.isZero()) {\n                _context4.next = 56;\n                break;\n              }\n              return _context4.abrupt(\"return\", null);\n            case 56:\n              linkage.push({\n                type: \"balance\",\n                content: balance.toString()\n              });\n            case 57:\n              // Call the token contract for the metadata URL\n              tx = {\n                to: this.provider.formatter.address(comps[0]),\n                data: hexConcat([selector, tokenId])\n              };\n              _context4.t6 = _parseString;\n              _context4.next = 61;\n              return this.provider.call(tx);\n            case 61:\n              _context4.t7 = _context4.sent;\n              metadataUrl = (0, _context4.t6)(_context4.t7, 0);\n              if (!(metadataUrl == null)) {\n                _context4.next = 65;\n                break;\n              }\n              return _context4.abrupt(\"return\", null);\n            case 65:\n              linkage.push({\n                type: \"metadata-url-base\",\n                content: metadataUrl\n              });\n              // ERC-1155 allows a generic {id} in the URL\n              if (scheme === \"erc1155\") {\n                metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                linkage.push({\n                  type: \"metadata-url-expanded\",\n                  content: metadataUrl\n                });\n              }\n              // Transform IPFS metadata links\n              if (metadataUrl.match(/^ipfs:/i)) {\n                metadataUrl = getIpfsLink(metadataUrl);\n              }\n              linkage.push({\n                type: \"metadata-url\",\n                content: metadataUrl\n              });\n              // Get the token metadata\n              _context4.next = 71;\n              return fetchJson(metadataUrl);\n            case 71:\n              metadata = _context4.sent;\n              if (metadata) {\n                _context4.next = 74;\n                break;\n              }\n              return _context4.abrupt(\"return\", null);\n            case 74:\n              linkage.push({\n                type: \"metadata\",\n                content: JSON.stringify(metadata)\n              });\n              // Pull the image URL out\n              imageUrl = metadata.image;\n              if (!(typeof imageUrl !== \"string\")) {\n                _context4.next = 78;\n                break;\n              }\n              return _context4.abrupt(\"return\", null);\n            case 78:\n              if (!imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                _context4.next = 81;\n                break;\n              }\n              _context4.next = 86;\n              break;\n            case 81:\n              // Transform IPFS link to gateway\n              ipfs = imageUrl.match(matcherIpfs);\n              if (!(ipfs == null)) {\n                _context4.next = 84;\n                break;\n              }\n              return _context4.abrupt(\"return\", null);\n            case 84:\n              linkage.push({\n                type: \"url-ipfs\",\n                content: imageUrl\n              });\n              imageUrl = getIpfsLink(imageUrl);\n            case 86:\n              linkage.push({\n                type: \"url\",\n                content: imageUrl\n              });\n              return _context4.abrupt(\"return\", {\n                linkage: linkage,\n                url: imageUrl\n              });\n            case 88:\n              i++;\n              _context4.next = 8;\n              break;\n            case 91:\n              _context4.next = 95;\n              break;\n            case 93:\n              _context4.prev = 93;\n              _context4.t8 = _context4[\"catch\"](1);\n            case 95:\n              return _context4.abrupt(\"return\", null);\n            case 96:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[1, 93]]);\n      }));\n    }\n  }, {\n    key: \"getContentHash\",\n    value: function getContentHash() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var hexBytes, ipfs, length, ipns, _length3, swarm, skynet, urlSafe, hash;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this._fetchBytes(\"0xbc1c58d1\");\n            case 2:\n              hexBytes = _context5.sent;\n              if (!(hexBytes == null || hexBytes === \"0x\")) {\n                _context5.next = 5;\n                break;\n              }\n              return _context5.abrupt(\"return\", null);\n            case 5:\n              // IPFS (CID: 1, Type: DAG-PB)\n              ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n              if (!ipfs) {\n                _context5.next = 10;\n                break;\n              }\n              length = parseInt(ipfs[3], 16);\n              if (!(ipfs[4].length === length * 2)) {\n                _context5.next = 10;\n                break;\n              }\n              return _context5.abrupt(\"return\", \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]));\n            case 10:\n              // IPNS (CID: 1, Type: libp2p-key)\n              ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n              if (!ipns) {\n                _context5.next = 15;\n                break;\n              }\n              _length3 = parseInt(ipns[3], 16);\n              if (!(ipns[4].length === _length3 * 2)) {\n                _context5.next = 15;\n                break;\n              }\n              return _context5.abrupt(\"return\", \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]));\n            case 15:\n              // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n              swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n              if (!swarm) {\n                _context5.next = 19;\n                break;\n              }\n              if (!(swarm[1].length === 32 * 2)) {\n                _context5.next = 19;\n                break;\n              }\n              return _context5.abrupt(\"return\", \"bzz:/\\/\" + swarm[1]);\n            case 19:\n              skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n              if (!skynet) {\n                _context5.next = 25;\n                break;\n              }\n              if (!(skynet[1].length === 34 * 2)) {\n                _context5.next = 25;\n                break;\n              }\n              // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n              urlSafe = {\n                \"=\": \"\",\n                \"+\": \"-\",\n                \"/\": \"_\"\n              };\n              hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, function (a) {\n                return urlSafe[a];\n              });\n              return _context5.abrupt(\"return\", \"sia:/\\/\" + hash);\n            case 25:\n              return _context5.abrupt(\"return\", logger.throwError(\"invalid or unsupported content hash data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n              }));\n            case 26:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(key) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var keyBytes, hexBytes;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              // The key encoded as parameter to fetchBytes\n              keyBytes = toUtf8Bytes(key); // The nodehash consumes the first slot, so the string pointer targets\n              // offset 64, with the length at offset 64 and data starting at offset 96\n              keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n              // Pad to word-size (32 bytes)\n              if (keyBytes.length % 32 !== 0) {\n                keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - key.length % 32)]);\n              }\n              _context6.next = 5;\n              return this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n            case 5:\n              hexBytes = _context6.sent;\n              if (!(hexBytes == null || hexBytes === \"0x\")) {\n                _context6.next = 8;\n                break;\n              }\n              return _context6.abrupt(\"return\", null);\n            case 8:\n              return _context6.abrupt(\"return\", toUtf8String(hexBytes));\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n    }\n  }]);\n  return Resolver;\n}();\nvar defaultFormatter = null;\nvar nextPollId = 1;\nexport var BaseProvider = /*#__PURE__*/function (_Provider) {\n  _inherits(BaseProvider, _Provider);\n  var _super = _createSuper(BaseProvider);\n  /**\n   *  ready\n   *\n   *  A Promise<Network> that resolves only once the provider is ready.\n   *\n   *  Sub-classes that call the super with a network without a chainId\n   *  MUST set this. Standard named networks have a known chainId.\n   *\n   */\n  function BaseProvider(network) {\n    var _this2;\n    _classCallCheck(this, BaseProvider);\n    _this2 = _super.call(this);\n    // Events being listened to\n    _this2._events = [];\n    _this2._emitted = {\n      block: -2\n    };\n    _this2.disableCcipRead = false;\n    _this2.formatter = (this instanceof BaseProvider ? this.constructor : void 0).getFormatter();\n    // If network is any, this Provider allows the underlying\n    // network to change dynamically, and we auto-detect the\n    // current network\n    defineReadOnly(_assertThisInitialized(_this2), \"anyNetwork\", network === \"any\");\n    if (_this2.anyNetwork) {\n      network = _this2.detectNetwork();\n    }\n    if (network instanceof Promise) {\n      _this2._networkPromise = network;\n      // Squash any \"unhandled promise\" errors; that do not need to be handled\n      network.catch(function (error) {});\n      // Trigger initial network setting (async)\n      _this2._ready().catch(function (error) {});\n    } else {\n      var knownNetwork = getStatic(this instanceof BaseProvider ? this.constructor : void 0, \"getNetwork\")(network);\n      if (knownNetwork) {\n        defineReadOnly(_assertThisInitialized(_this2), \"_network\", knownNetwork);\n        _this2.emit(\"network\", knownNetwork, null);\n      } else {\n        logger.throwArgumentError(\"invalid network\", \"network\", network);\n      }\n    }\n    _this2._maxInternalBlockNumber = -1024;\n    _this2._lastBlockNumber = -2;\n    _this2._maxFilterBlockRange = 10;\n    _this2._pollingInterval = 4000;\n    _this2._fastQueryDate = 0;\n    return _this2;\n  }\n  _createClass(BaseProvider, [{\n    key: \"_ready\",\n    value: function _ready() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var network;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(this._network == null)) {\n                _context7.next = 17;\n                break;\n              }\n              network = null;\n              if (!this._networkPromise) {\n                _context7.next = 11;\n                break;\n              }\n              _context7.prev = 3;\n              _context7.next = 6;\n              return this._networkPromise;\n            case 6:\n              network = _context7.sent;\n              _context7.next = 11;\n              break;\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](3);\n            case 11:\n              if (!(network == null)) {\n                _context7.next = 15;\n                break;\n              }\n              _context7.next = 14;\n              return this.detectNetwork();\n            case 14:\n              network = _context7.sent;\n            case 15:\n              // This should never happen; every Provider sub-class should have\n              // suggested a network by here (or have thrown).\n              if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n              }\n              // Possible this call stacked so do not call defineReadOnly again\n              if (this._network == null) {\n                if (this.anyNetwork) {\n                  this._network = network;\n                } else {\n                  defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n              }\n            case 17:\n              return _context7.abrupt(\"return\", this._network);\n            case 18:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[3, 9]]);\n      }));\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n  }, {\n    key: \"ready\",\n    get: function get() {\n      var _this3 = this;\n      return poll(function () {\n        return _this3._ready().then(function (network) {\n          return network;\n        }, function (error) {\n          // If the network isn't running yet, we will wait\n          if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n            return undefined;\n          }\n          throw error;\n        });\n      });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n  }, {\n    key: \"ccipReadFetch\",\n    value: function ccipReadFetch(tx, calldata, urls) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var sender, data, errorMessages, i, url, href, json, result, errorMessage;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!(this.disableCcipRead || urls.length === 0)) {\n                _context8.next = 2;\n                break;\n              }\n              return _context8.abrupt(\"return\", null);\n            case 2:\n              sender = tx.to.toLowerCase();\n              data = calldata.toLowerCase();\n              errorMessages = [];\n              i = 0;\n            case 6:\n              if (!(i < urls.length)) {\n                _context8.next = 22;\n                break;\n              }\n              url = urls[i]; // URL expansion\n              href = url.replace(\"{sender}\", sender).replace(\"{data}\", data); // If no {data} is present, use POST; otherwise GET\n              json = url.indexOf(\"{data}\") >= 0 ? null : JSON.stringify({\n                data: data,\n                sender: sender\n              });\n              _context8.next = 12;\n              return fetchJson({\n                url: href,\n                errorPassThrough: true\n              }, json, function (value, response) {\n                value.status = response.statusCode;\n                return value;\n              });\n            case 12:\n              result = _context8.sent;\n              if (!result.data) {\n                _context8.next = 15;\n                break;\n              }\n              return _context8.abrupt(\"return\", result.data);\n            case 15:\n              errorMessage = result.message || \"unknown error\"; // 4xx indicates the result is not present; stop\n              if (!(result.status >= 400 && result.status < 500)) {\n                _context8.next = 18;\n                break;\n              }\n              return _context8.abrupt(\"return\", logger.throwError(\"response not found during CCIP fetch: \".concat(errorMessage), Logger.errors.SERVER_ERROR, {\n                url: url,\n                errorMessage: errorMessage\n              }));\n            case 18:\n              // 5xx indicates server issue; try the next url\n              errorMessages.push(errorMessage);\n            case 19:\n              i++;\n              _context8.next = 6;\n              break;\n            case 22:\n              return _context8.abrupt(\"return\", logger.throwError(\"error encountered during CCIP fetch: \".concat(errorMessages.map(function (m) {\n                return JSON.stringify(m);\n              }).join(\", \")), Logger.errors.SERVER_ERROR, {\n                urls: urls,\n                errorMessages: errorMessages\n              }));\n            case 23:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n  }, {\n    key: \"_getInternalBlockNumber\",\n    value: function _getInternalBlockNumber(maxAge) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _this4 = this;\n        var internalBlockNumber, result, reqTime, checkInternalBlockNumber;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return this._ready();\n            case 2:\n              if (!(maxAge > 0)) {\n                _context9.next = 20;\n                break;\n              }\n            case 3:\n              if (!this._internalBlockNumber) {\n                _context9.next = 20;\n                break;\n              }\n              // ...\"remember\" which fetch we started with\n              internalBlockNumber = this._internalBlockNumber;\n              _context9.prev = 5;\n              _context9.next = 8;\n              return internalBlockNumber;\n            case 8:\n              result = _context9.sent;\n              if (!(getTime() - result.respTime <= maxAge)) {\n                _context9.next = 11;\n                break;\n              }\n              return _context9.abrupt(\"return\", result.blockNumber);\n            case 11:\n              return _context9.abrupt(\"break\", 20);\n            case 14:\n              _context9.prev = 14;\n              _context9.t0 = _context9[\"catch\"](5);\n              if (!(this._internalBlockNumber === internalBlockNumber)) {\n                _context9.next = 18;\n                break;\n              }\n              return _context9.abrupt(\"break\", 20);\n            case 18:\n              _context9.next = 3;\n              break;\n            case 20:\n              reqTime = getTime();\n              checkInternalBlockNumber = resolveProperties({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then(function (network) {\n                  return null;\n                }, function (error) {\n                  return error;\n                })\n              }).then(function (_ref) {\n                var blockNumber = _ref.blockNumber,\n                  networkError = _ref.networkError;\n                if (networkError) {\n                  // Unremember this bad internal block number\n                  if (_this4._internalBlockNumber === checkInternalBlockNumber) {\n                    _this4._internalBlockNumber = null;\n                  }\n                  throw networkError;\n                }\n                var respTime = getTime();\n                blockNumber = BigNumber.from(blockNumber).toNumber();\n                if (blockNumber < _this4._maxInternalBlockNumber) {\n                  blockNumber = _this4._maxInternalBlockNumber;\n                }\n                _this4._maxInternalBlockNumber = blockNumber;\n                _this4._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return {\n                  blockNumber: blockNumber,\n                  reqTime: reqTime,\n                  respTime: respTime\n                };\n              });\n              this._internalBlockNumber = checkInternalBlockNumber;\n              // Swallow unhandled exceptions; if needed they are handled else where\n              checkInternalBlockNumber.catch(function (error) {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (_this4._internalBlockNumber === checkInternalBlockNumber) {\n                  _this4._internalBlockNumber = null;\n                }\n              });\n              _context9.next = 26;\n              return checkInternalBlockNumber;\n            case 26:\n              return _context9.abrupt(\"return\", _context9.sent.blockNumber);\n            case 27:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[5, 14]]);\n      }));\n    }\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var _this5 = this;\n        var pollId, runners, blockNumber, i;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              pollId = nextPollId++; // Track all running promises, so we can trigger a post-poll once they are complete\n              runners = [];\n              blockNumber = null;\n              _context10.prev = 3;\n              _context10.next = 6;\n              return this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            case 6:\n              blockNumber = _context10.sent;\n              _context10.next = 13;\n              break;\n            case 9:\n              _context10.prev = 9;\n              _context10.t0 = _context10[\"catch\"](3);\n              this.emit(\"error\", _context10.t0);\n              return _context10.abrupt(\"return\");\n            case 13:\n              this._setFastBlockNumber(blockNumber);\n              // Emit a poll event after we have the latest (fast) block number\n              this.emit(\"poll\", pollId, blockNumber);\n              // If the block has not changed, meh.\n              if (!(blockNumber === this._lastBlockNumber)) {\n                _context10.next = 18;\n                break;\n              }\n              this.emit(\"didPoll\", pollId);\n              return _context10.abrupt(\"return\");\n            case 18:\n              // First polling cycle, trigger a \"block\" events\n              if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n              }\n              if (Math.abs(this._emitted.block - blockNumber) > 1000) {\n                logger.warn(\"network block skew detected; skipping block events (emitted=\".concat(this._emitted.block, \" blockNumber\").concat(blockNumber, \")\"));\n                this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                  blockNumber: blockNumber,\n                  event: \"blockSkew\",\n                  previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n              } else {\n                // Notify all listener for each block that has passed\n                for (i = this._emitted.block + 1; i <= blockNumber; i++) {\n                  this.emit(\"block\", i);\n                }\n              }\n              // The emitted block was updated, check for obsolete events\n              if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach(function (key) {\n                  // The block event does not expire\n                  if (key === \"block\") {\n                    return;\n                  }\n                  // The block we were at when we emitted this event\n                  var eventBlockNumber = _this5._emitted[key];\n                  // We cannot garbage collect pending transactions or blocks here\n                  // They should be garbage collected by the Provider when setting\n                  // \"pending\" events\n                  if (eventBlockNumber === \"pending\") {\n                    return;\n                  }\n                  // Evict any transaction hashes or block hashes over 12 blocks\n                  // old, since they should not return null anyways\n                  if (blockNumber - eventBlockNumber > 12) {\n                    delete _this5._emitted[key];\n                  }\n                });\n              }\n              // First polling cycle\n              if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n              }\n              // Find all transaction hashes we are waiting on\n              this._events.forEach(function (event) {\n                switch (event.type) {\n                  case \"tx\":\n                    {\n                      var hash = event.hash;\n                      var runner = _this5.getTransactionReceipt(hash).then(function (receipt) {\n                        if (!receipt || receipt.blockNumber == null) {\n                          return null;\n                        }\n                        _this5._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        _this5.emit(hash, receipt);\n                        return null;\n                      }).catch(function (error) {\n                        _this5.emit(\"error\", error);\n                      });\n                      runners.push(runner);\n                      break;\n                    }\n                  case \"filter\":\n                    {\n                      // We only allow a single getLogs to be in-flight at a time\n                      if (!event._inflight) {\n                        event._inflight = true;\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                          event._lastBlockNumber = blockNumber - 1;\n                        }\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        var filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        var minFromBlock = filter.toBlock - _this5._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) {\n                          filter.fromBlock = minFromBlock;\n                        }\n                        if (filter.fromBlock < 0) {\n                          filter.fromBlock = 0;\n                        }\n                        var _runner = _this5.getLogs(filter).then(function (logs) {\n                          // Allow the next getLogs\n                          event._inflight = false;\n                          if (logs.length === 0) {\n                            return;\n                          }\n                          logs.forEach(function (log) {\n                            // Only when we get an event for a given block number\n                            // can we trust the events are indexed\n                            if (log.blockNumber > event._lastBlockNumber) {\n                              event._lastBlockNumber = log.blockNumber;\n                            }\n                            // Make sure we stall requests to fetch blocks and txs\n                            _this5._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                            _this5._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                            _this5.emit(filter, log);\n                          });\n                        }).catch(function (error) {\n                          _this5.emit(\"error\", error);\n                          // Allow another getLogs (the range was not updated)\n                          event._inflight = false;\n                        });\n                        runners.push(_runner);\n                      }\n                      break;\n                    }\n                }\n              });\n              this._lastBlockNumber = blockNumber;\n              // Once all events for this loop have been processed, emit \"didPoll\"\n              Promise.all(runners).then(function () {\n                _this5.emit(\"didPoll\", pollId);\n              }).catch(function (error) {\n                _this5.emit(\"error\", error);\n              });\n              return _context10.abrupt(\"return\");\n            case 26:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this, [[3, 9]]);\n      }));\n    }\n    // Deprecated; do not use this\n  }, {\n    key: \"resetEventsBlock\",\n    value: function resetEventsBlock(blockNumber) {\n      this._lastBlockNumber = blockNumber - 1;\n      if (this.polling) {\n        this.poll();\n      }\n    }\n  }, {\n    key: \"network\",\n    get: function get() {\n      return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n  }, {\n    key: \"detectNetwork\",\n    value: function detectNetwork() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              return _context11.abrupt(\"return\", logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n              }));\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11);\n      }));\n    }\n  }, {\n    key: \"getNetwork\",\n    value: function getNetwork() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        var network, currentNetwork, error;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return this._ready();\n            case 2:\n              network = _context12.sent;\n              _context12.next = 5;\n              return this.detectNetwork();\n            case 5:\n              currentNetwork = _context12.sent;\n              if (!(network.chainId !== currentNetwork.chainId)) {\n                _context12.next = 23;\n                break;\n              }\n              if (!this.anyNetwork) {\n                _context12.next = 20;\n                break;\n              }\n              this._network = currentNetwork;\n              // Reset all internal block number guards and caches\n              this._lastBlockNumber = -2;\n              this._fastBlockNumber = null;\n              this._fastBlockNumberPromise = null;\n              this._fastQueryDate = 0;\n              this._emitted.block = -2;\n              this._maxInternalBlockNumber = -1024;\n              this._internalBlockNumber = null;\n              // The \"network\" event MUST happen before this method resolves\n              // so any events have a chance to unregister, so we stall an\n              // additional event loop before returning from /this/ call\n              this.emit(\"network\", currentNetwork, network);\n              _context12.next = 19;\n              return stall(0);\n            case 19:\n              return _context12.abrupt(\"return\", this._network);\n            case 20:\n              error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n              });\n              this.emit(\"error\", error);\n              throw error;\n            case 23:\n              return _context12.abrupt(\"return\", network);\n            case 24:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n    }\n  }, {\n    key: \"blockNumber\",\n    get: function get() {\n      var _this6 = this;\n      this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(function (blockNumber) {\n        _this6._setFastBlockNumber(blockNumber);\n      }, function (error) {});\n      return this._fastBlockNumber != null ? this._fastBlockNumber : -1;\n    }\n  }, {\n    key: \"polling\",\n    get: function get() {\n      return this._poller != null;\n    },\n    set: function set(value) {\n      var _this7 = this;\n      if (value && !this._poller) {\n        this._poller = setInterval(function () {\n          _this7.poll();\n        }, this.pollingInterval);\n        if (!this._bootstrapPoll) {\n          this._bootstrapPoll = setTimeout(function () {\n            _this7.poll();\n            // We block additional polls until the polling interval\n            // is done, to prevent overwhelming the poll function\n            _this7._bootstrapPoll = setTimeout(function () {\n              // If polling was disabled, something may require a poke\n              // since starting the bootstrap poll and it was disabled\n              if (!_this7._poller) {\n                _this7.poll();\n              }\n              // Clear out the bootstrap so we can do another\n              _this7._bootstrapPoll = null;\n            }, _this7.pollingInterval);\n          }, 0);\n        }\n      } else if (!value && this._poller) {\n        clearInterval(this._poller);\n        this._poller = null;\n      }\n    }\n  }, {\n    key: \"pollingInterval\",\n    get: function get() {\n      return this._pollingInterval;\n    },\n    set: function set(value) {\n      var _this8 = this;\n      if (typeof value !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n        throw new Error(\"invalid polling interval\");\n      }\n      this._pollingInterval = value;\n      if (this._poller) {\n        clearInterval(this._poller);\n        this._poller = setInterval(function () {\n          _this8.poll();\n        }, this._pollingInterval);\n      }\n    }\n  }, {\n    key: \"_getFastBlockNumber\",\n    value: function _getFastBlockNumber() {\n      var _this9 = this;\n      var now = getTime();\n      // Stale block number, request a newer value\n      if (now - this._fastQueryDate > 2 * this._pollingInterval) {\n        this._fastQueryDate = now;\n        this._fastBlockNumberPromise = this.getBlockNumber().then(function (blockNumber) {\n          if (_this9._fastBlockNumber == null || blockNumber > _this9._fastBlockNumber) {\n            _this9._fastBlockNumber = blockNumber;\n          }\n          return _this9._fastBlockNumber;\n        });\n      }\n      return this._fastBlockNumberPromise;\n    }\n  }, {\n    key: \"_setFastBlockNumber\",\n    value: function _setFastBlockNumber(blockNumber) {\n      // Older block, maybe a stale request\n      if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n        return;\n      }\n      // Update the time we updated the blocknumber\n      this._fastQueryDate = getTime();\n      // Newer block number, use  it\n      if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n        this._fastBlockNumber = blockNumber;\n        this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n      }\n    }\n  }, {\n    key: \"waitForTransaction\",\n    value: function waitForTransaction(transactionHash, confirmations, timeout) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              return _context13.abrupt(\"return\", this._waitForTransaction(transactionHash, confirmations == null ? 1 : confirmations, timeout || 0, null));\n            case 1:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n    }\n  }, {\n    key: \"_waitForTransaction\",\n    value: function _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {\n        var _this10 = this;\n        var receipt;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return this.getTransactionReceipt(transactionHash);\n            case 2:\n              receipt = _context16.sent;\n              if (!((receipt ? receipt.confirmations : 0) >= confirmations)) {\n                _context16.next = 5;\n                break;\n              }\n              return _context16.abrupt(\"return\", receipt);\n            case 5:\n              return _context16.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var cancelFuncs = [];\n                var done = false;\n                var alreadyDone = function alreadyDone() {\n                  if (done) {\n                    return true;\n                  }\n                  done = true;\n                  cancelFuncs.forEach(function (func) {\n                    func();\n                  });\n                  return false;\n                };\n                var minedHandler = function minedHandler(receipt) {\n                  if (receipt.confirmations < confirmations) {\n                    return;\n                  }\n                  if (alreadyDone()) {\n                    return;\n                  }\n                  resolve(receipt);\n                };\n                _this10.on(transactionHash, minedHandler);\n                cancelFuncs.push(function () {\n                  _this10.removeListener(transactionHash, minedHandler);\n                });\n                if (replaceable) {\n                  var lastBlockNumber = replaceable.startBlock;\n                  var scannedBlock = null;\n                  var replaceHandler = function replaceHandler(blockNumber) {\n                    return __awaiter(_this10, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n                      var _this11 = this;\n                      return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n                        while (1) switch (_context15.prev = _context15.next) {\n                          case 0:\n                            if (!done) {\n                              _context15.next = 2;\n                              break;\n                            }\n                            return _context15.abrupt(\"return\");\n                          case 2:\n                            _context15.next = 4;\n                            return stall(1000);\n                          case 4:\n                            this.getTransactionCount(replaceable.from).then(function (nonce) {\n                              return __awaiter(_this11, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n                                var mined, block, ti, tx, _receipt, reason;\n                                return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n                                  while (1) switch (_context14.prev = _context14.next) {\n                                    case 0:\n                                      if (!done) {\n                                        _context14.next = 2;\n                                        break;\n                                      }\n                                      return _context14.abrupt(\"return\");\n                                    case 2:\n                                      if (!(nonce <= replaceable.nonce)) {\n                                        _context14.next = 6;\n                                        break;\n                                      }\n                                      lastBlockNumber = blockNumber;\n                                      _context14.next = 41;\n                                      break;\n                                    case 6:\n                                      _context14.next = 8;\n                                      return this.getTransaction(transactionHash);\n                                    case 8:\n                                      mined = _context14.sent;\n                                      if (!(mined && mined.blockNumber != null)) {\n                                        _context14.next = 11;\n                                        break;\n                                      }\n                                      return _context14.abrupt(\"return\");\n                                    case 11:\n                                      // First time scanning. We start a little earlier for some\n                                      // wiggle room here to handle the eventually consistent nature\n                                      // of blockchain (e.g. the getTransactionCount was for a\n                                      // different block)\n                                      if (scannedBlock == null) {\n                                        scannedBlock = lastBlockNumber - 3;\n                                        if (scannedBlock < replaceable.startBlock) {\n                                          scannedBlock = replaceable.startBlock;\n                                        }\n                                      }\n                                    case 12:\n                                      if (!(scannedBlock <= blockNumber)) {\n                                        _context14.next = 41;\n                                        break;\n                                      }\n                                      if (!done) {\n                                        _context14.next = 15;\n                                        break;\n                                      }\n                                      return _context14.abrupt(\"return\");\n                                    case 15:\n                                      _context14.next = 17;\n                                      return this.getBlockWithTransactions(scannedBlock);\n                                    case 17:\n                                      block = _context14.sent;\n                                      ti = 0;\n                                    case 19:\n                                      if (!(ti < block.transactions.length)) {\n                                        _context14.next = 38;\n                                        break;\n                                      }\n                                      tx = block.transactions[ti]; // Successfully mined!\n                                      if (!(tx.hash === transactionHash)) {\n                                        _context14.next = 23;\n                                        break;\n                                      }\n                                      return _context14.abrupt(\"return\");\n                                    case 23:\n                                      if (!(tx.from === replaceable.from && tx.nonce === replaceable.nonce)) {\n                                        _context14.next = 35;\n                                        break;\n                                      }\n                                      if (!done) {\n                                        _context14.next = 26;\n                                        break;\n                                      }\n                                      return _context14.abrupt(\"return\");\n                                    case 26:\n                                      _context14.next = 28;\n                                      return this.waitForTransaction(tx.hash, confirmations);\n                                    case 28:\n                                      _receipt = _context14.sent;\n                                      if (!alreadyDone()) {\n                                        _context14.next = 31;\n                                        break;\n                                      }\n                                      return _context14.abrupt(\"return\");\n                                    case 31:\n                                      // The reason we were replaced\n                                      reason = \"replaced\";\n                                      if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                        reason = \"repriced\";\n                                      } else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                        reason = \"cancelled\";\n                                      }\n                                      // Explain why we were replaced\n                                      reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                        cancelled: reason === \"replaced\" || reason === \"cancelled\",\n                                        reason: reason,\n                                        replacement: this._wrapTransaction(tx),\n                                        hash: transactionHash,\n                                        receipt: _receipt\n                                      }));\n                                      return _context14.abrupt(\"return\");\n                                    case 35:\n                                      ti++;\n                                      _context14.next = 19;\n                                      break;\n                                    case 38:\n                                      scannedBlock++;\n                                      _context14.next = 12;\n                                      break;\n                                    case 41:\n                                      if (!done) {\n                                        _context14.next = 43;\n                                        break;\n                                      }\n                                      return _context14.abrupt(\"return\");\n                                    case 43:\n                                      this.once(\"block\", replaceHandler);\n                                    case 44:\n                                    case \"end\":\n                                      return _context14.stop();\n                                  }\n                                }, _callee14, this);\n                              }));\n                            }, function (error) {\n                              if (done) {\n                                return;\n                              }\n                              _this11.once(\"block\", replaceHandler);\n                            });\n                          case 5:\n                          case \"end\":\n                            return _context15.stop();\n                        }\n                      }, _callee15, this);\n                    }));\n                  };\n                  if (done) {\n                    return;\n                  }\n                  _this10.once(\"block\", replaceHandler);\n                  cancelFuncs.push(function () {\n                    _this10.removeListener(\"block\", replaceHandler);\n                  });\n                }\n                if (typeof timeout === \"number\" && timeout > 0) {\n                  var timer = setTimeout(function () {\n                    if (alreadyDone()) {\n                      return;\n                    }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, {\n                      timeout: timeout\n                    }));\n                  }, timeout);\n                  if (timer.unref) {\n                    timer.unref();\n                  }\n                  cancelFuncs.push(function () {\n                    clearTimeout(timer);\n                  });\n                }\n              }));\n            case 6:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n    }\n  }, {\n    key: \"getBlockNumber\",\n    value: function getBlockNumber() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              return _context17.abrupt(\"return\", this._getInternalBlockNumber(0));\n            case 1:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, this);\n      }));\n    }\n  }, {\n    key: \"getGasPrice\",\n    value: function getGasPrice() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return this.getNetwork();\n            case 2:\n              _context18.next = 4;\n              return this.perform(\"getGasPrice\", {});\n            case 4:\n              result = _context18.sent;\n              _context18.prev = 5;\n              return _context18.abrupt(\"return\", BigNumber.from(result));\n            case 9:\n              _context18.prev = 9;\n              _context18.t0 = _context18[\"catch\"](5);\n              return _context18.abrupt(\"return\", logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result: result,\n                error: _context18.t0\n              }));\n            case 12:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this, [[5, 9]]);\n      }));\n    }\n  }, {\n    key: \"getBalance\",\n    value: function getBalance(addressOrName, blockTag) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {\n        var params, result;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return this.getNetwork();\n            case 2:\n              _context19.next = 4;\n              return resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n              });\n            case 4:\n              params = _context19.sent;\n              _context19.next = 7;\n              return this.perform(\"getBalance\", params);\n            case 7:\n              result = _context19.sent;\n              _context19.prev = 8;\n              return _context19.abrupt(\"return\", BigNumber.from(result));\n            case 12:\n              _context19.prev = 12;\n              _context19.t0 = _context19[\"catch\"](8);\n              return _context19.abrupt(\"return\", logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params: params,\n                result: result,\n                error: _context19.t0\n              }));\n            case 15:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this, [[8, 12]]);\n      }));\n    }\n  }, {\n    key: \"getTransactionCount\",\n    value: function getTransactionCount(addressOrName, blockTag) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {\n        var params, result;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.next = 2;\n              return this.getNetwork();\n            case 2:\n              _context20.next = 4;\n              return resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n              });\n            case 4:\n              params = _context20.sent;\n              _context20.next = 7;\n              return this.perform(\"getTransactionCount\", params);\n            case 7:\n              result = _context20.sent;\n              _context20.prev = 8;\n              return _context20.abrupt(\"return\", BigNumber.from(result).toNumber());\n            case 12:\n              _context20.prev = 12;\n              _context20.t0 = _context20[\"catch\"](8);\n              return _context20.abrupt(\"return\", logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params: params,\n                result: result,\n                error: _context20.t0\n              }));\n            case 15:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this, [[8, 12]]);\n      }));\n    }\n  }, {\n    key: \"getCode\",\n    value: function getCode(addressOrName, blockTag) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {\n        var params, result;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.next = 2;\n              return this.getNetwork();\n            case 2:\n              _context21.next = 4;\n              return resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n              });\n            case 4:\n              params = _context21.sent;\n              _context21.next = 7;\n              return this.perform(\"getCode\", params);\n            case 7:\n              result = _context21.sent;\n              _context21.prev = 8;\n              return _context21.abrupt(\"return\", hexlify(result));\n            case 12:\n              _context21.prev = 12;\n              _context21.t0 = _context21[\"catch\"](8);\n              return _context21.abrupt(\"return\", logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params: params,\n                result: result,\n                error: _context21.t0\n              }));\n            case 15:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this, [[8, 12]]);\n      }));\n    }\n  }, {\n    key: \"getStorageAt\",\n    value: function getStorageAt(addressOrName, position, blockTag) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {\n        var params, result;\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.next = 2;\n              return this.getNetwork();\n            case 2:\n              _context22.next = 4;\n              return resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then(function (p) {\n                  return hexValue(p);\n                })\n              });\n            case 4:\n              params = _context22.sent;\n              _context22.next = 7;\n              return this.perform(\"getStorageAt\", params);\n            case 7:\n              result = _context22.sent;\n              _context22.prev = 8;\n              return _context22.abrupt(\"return\", hexlify(result));\n            case 12:\n              _context22.prev = 12;\n              _context22.t0 = _context22[\"catch\"](8);\n              return _context22.abrupt(\"return\", logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params: params,\n                result: result,\n                error: _context22.t0\n              }));\n            case 15:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22, this, [[8, 12]]);\n      }));\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n  }, {\n    key: \"_wrapTransaction\",\n    value: function _wrapTransaction(tx, hash, startBlock) {\n      var _this12 = this;\n      if (hash != null && hexDataLength(hash) !== 32) {\n        throw new Error(\"invalid response - sendTransaction\");\n      }\n      var result = tx;\n      // Check the hash we expect is the same as the hash the server reported\n      if (hash != null && tx.hash !== hash) {\n        logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, {\n          expectedHash: tx.hash,\n          returnedHash: hash\n        });\n      }\n      result.wait = function (confirms, timeout) {\n        return __awaiter(_this12, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {\n          var replacement, receipt;\n          return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n            while (1) switch (_context23.prev = _context23.next) {\n              case 0:\n                if (confirms == null) {\n                  confirms = 1;\n                }\n                if (timeout == null) {\n                  timeout = 0;\n                }\n                // Get the details to detect replacement\n                replacement = undefined;\n                if (confirms !== 0 && startBlock != null) {\n                  replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock: startBlock\n                  };\n                }\n                _context23.next = 6;\n                return this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n              case 6:\n                receipt = _context23.sent;\n                if (!(receipt == null && confirms === 0)) {\n                  _context23.next = 9;\n                  break;\n                }\n                return _context23.abrupt(\"return\", null);\n              case 9:\n                // No longer pending, allow the polling loop to garbage collect this\n                this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n                if (receipt.status === 0) {\n                  logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                  });\n                }\n                return _context23.abrupt(\"return\", receipt);\n              case 12:\n              case \"end\":\n                return _context23.stop();\n            }\n          }, _callee23, this);\n        }));\n      };\n      return result;\n    }\n  }, {\n    key: \"sendTransaction\",\n    value: function sendTransaction(signedTransaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {\n        var hexTx, tx, blockNumber, hash;\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.next = 2;\n              return this.getNetwork();\n            case 2:\n              _context24.next = 4;\n              return Promise.resolve(signedTransaction).then(function (t) {\n                return hexlify(t);\n              });\n            case 4:\n              hexTx = _context24.sent;\n              tx = this.formatter.transaction(signedTransaction);\n              if (tx.confirmations == null) {\n                tx.confirmations = 0;\n              }\n              _context24.next = 9;\n              return this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            case 9:\n              blockNumber = _context24.sent;\n              _context24.prev = 10;\n              _context24.next = 13;\n              return this.perform(\"sendTransaction\", {\n                signedTransaction: hexTx\n              });\n            case 13:\n              hash = _context24.sent;\n              return _context24.abrupt(\"return\", this._wrapTransaction(tx, hash, blockNumber));\n            case 17:\n              _context24.prev = 17;\n              _context24.t0 = _context24[\"catch\"](10);\n              _context24.t0.transaction = tx;\n              _context24.t0.transactionHash = tx.hash;\n              throw _context24.t0;\n            case 22:\n            case \"end\":\n              return _context24.stop();\n          }\n        }, _callee24, this, [[10, 17]]);\n      }));\n    }\n  }, {\n    key: \"_getTransactionRequest\",\n    value: function _getTransactionRequest(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee25() {\n        var _this13 = this;\n        var values, tx;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) switch (_context25.prev = _context25.next) {\n            case 0:\n              _context25.next = 2;\n              return transaction;\n            case 2:\n              values = _context25.sent;\n              tx = {};\n              [\"from\", \"to\"].forEach(function (key) {\n                if (values[key] == null) {\n                  return;\n                }\n                tx[key] = Promise.resolve(values[key]).then(function (v) {\n                  return v ? _this13._getAddress(v) : null;\n                });\n              });\n              [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach(function (key) {\n                if (values[key] == null) {\n                  return;\n                }\n                tx[key] = Promise.resolve(values[key]).then(function (v) {\n                  return v ? BigNumber.from(v) : null;\n                });\n              });\n              [\"type\"].forEach(function (key) {\n                if (values[key] == null) {\n                  return;\n                }\n                tx[key] = Promise.resolve(values[key]).then(function (v) {\n                  return v != null ? v : null;\n                });\n              });\n              if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n              }\n              [\"data\"].forEach(function (key) {\n                if (values[key] == null) {\n                  return;\n                }\n                tx[key] = Promise.resolve(values[key]).then(function (v) {\n                  return v ? hexlify(v) : null;\n                });\n              });\n              _context25.t0 = this.formatter;\n              _context25.next = 12;\n              return resolveProperties(tx);\n            case 12:\n              _context25.t1 = _context25.sent;\n              return _context25.abrupt(\"return\", _context25.t0.transactionRequest.call(_context25.t0, _context25.t1));\n            case 14:\n            case \"end\":\n              return _context25.stop();\n          }\n        }, _callee25, this);\n      }));\n    }\n  }, {\n    key: \"_getFilter\",\n    value: function _getFilter(filter) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {\n        var _this14 = this;\n        var result;\n        return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n          while (1) switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.next = 2;\n              return filter;\n            case 2:\n              filter = _context26.sent;\n              result = {};\n              if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n              }\n              [\"blockHash\", \"topics\"].forEach(function (key) {\n                if (filter[key] == null) {\n                  return;\n                }\n                result[key] = filter[key];\n              });\n              [\"fromBlock\", \"toBlock\"].forEach(function (key) {\n                if (filter[key] == null) {\n                  return;\n                }\n                result[key] = _this14._getBlockTag(filter[key]);\n              });\n              _context26.t0 = this.formatter;\n              _context26.next = 10;\n              return resolveProperties(result);\n            case 10:\n              _context26.t1 = _context26.sent;\n              return _context26.abrupt(\"return\", _context26.t0.filter.call(_context26.t0, _context26.t1));\n            case 12:\n            case \"end\":\n              return _context26.stop();\n          }\n        }, _callee26, this);\n      }));\n    }\n  }, {\n    key: \"_call\",\n    value: function _call(transaction, blockTag, attempt) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {\n        var txSender, result, data, sender, urls, urlsOffset, urlsLength, urlsData, u, url, calldata, callbackSelector, extraData, ccipResult, tx;\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) switch (_context27.prev = _context27.next) {\n            case 0:\n              if (attempt >= MAX_CCIP_REDIRECTS) {\n                logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                  redirects: attempt,\n                  transaction: transaction\n                });\n              }\n              txSender = transaction.to;\n              _context27.next = 4;\n              return this.perform(\"call\", {\n                transaction: transaction,\n                blockTag: blockTag\n              });\n            case 4:\n              result = _context27.sent;\n              if (!(attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && hexDataLength(result) % 32 === 4)) {\n                _context27.next = 31;\n                break;\n              }\n              _context27.prev = 6;\n              data = hexDataSlice(result, 4); // Check the sender of the OffchainLookup matches the transaction\n              sender = hexDataSlice(data, 0, 32);\n              if (!BigNumber.from(sender).eq(txSender)) {\n                logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                  name: \"OffchainLookup\",\n                  signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                  transaction: transaction,\n                  data: result\n                });\n              }\n              // Read the URLs from the response\n              urls = [];\n              urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n              urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n              urlsData = hexDataSlice(data, urlsOffset + 32);\n              for (u = 0; u < urlsLength; u++) {\n                url = _parseString(urlsData, u * 32);\n                if (url == null) {\n                  logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                    name: \"OffchainLookup\",\n                    signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                    transaction: transaction,\n                    data: result\n                  });\n                }\n                urls.push(url);\n              }\n              // Get the CCIP calldata to forward\n              calldata = _parseBytes(data, 64); // Get the callbackSelector (bytes4)\n              if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                  name: \"OffchainLookup\",\n                  signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                  transaction: transaction,\n                  data: result\n                });\n              }\n              callbackSelector = hexDataSlice(data, 96, 100); // Get the extra data to send back to the contract as context\n              extraData = _parseBytes(data, 128);\n              _context27.next = 21;\n              return this.ccipReadFetch(transaction, calldata, urls);\n            case 21:\n              ccipResult = _context27.sent;\n              if (ccipResult == null) {\n                logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                  name: \"OffchainLookup\",\n                  signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                  transaction: transaction,\n                  data: result\n                });\n              }\n              tx = {\n                to: txSender,\n                data: hexConcat([callbackSelector, encodeBytes([ccipResult, extraData])])\n              };\n              return _context27.abrupt(\"return\", this._call(tx, blockTag, attempt + 1));\n            case 27:\n              _context27.prev = 27;\n              _context27.t0 = _context27[\"catch\"](6);\n              if (!(_context27.t0.code === Logger.errors.SERVER_ERROR)) {\n                _context27.next = 31;\n                break;\n              }\n              throw _context27.t0;\n            case 31:\n              _context27.prev = 31;\n              return _context27.abrupt(\"return\", hexlify(result));\n            case 35:\n              _context27.prev = 35;\n              _context27.t1 = _context27[\"catch\"](31);\n              return _context27.abrupt(\"return\", logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: {\n                  transaction: transaction,\n                  blockTag: blockTag\n                },\n                result: result,\n                error: _context27.t1\n              }));\n            case 38:\n            case \"end\":\n              return _context27.stop();\n          }\n        }, _callee27, this, [[6, 27], [31, 35]]);\n      }));\n    }\n  }, {\n    key: \"call\",\n    value: function call(transaction, blockTag) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee28() {\n        var resolved;\n        return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n          while (1) switch (_context28.prev = _context28.next) {\n            case 0:\n              _context28.next = 2;\n              return this.getNetwork();\n            case 2:\n              _context28.next = 4;\n              return resolveProperties({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag),\n                ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n              });\n            case 4:\n              resolved = _context28.sent;\n              return _context28.abrupt(\"return\", this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1));\n            case 6:\n            case \"end\":\n              return _context28.stop();\n          }\n        }, _callee28, this);\n      }));\n    }\n  }, {\n    key: \"estimateGas\",\n    value: function estimateGas(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee29() {\n        var params, result;\n        return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n          while (1) switch (_context29.prev = _context29.next) {\n            case 0:\n              _context29.next = 2;\n              return this.getNetwork();\n            case 2:\n              _context29.next = 4;\n              return resolveProperties({\n                transaction: this._getTransactionRequest(transaction)\n              });\n            case 4:\n              params = _context29.sent;\n              _context29.next = 7;\n              return this.perform(\"estimateGas\", params);\n            case 7:\n              result = _context29.sent;\n              _context29.prev = 8;\n              return _context29.abrupt(\"return\", BigNumber.from(result));\n            case 12:\n              _context29.prev = 12;\n              _context29.t0 = _context29[\"catch\"](8);\n              return _context29.abrupt(\"return\", logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params: params,\n                result: result,\n                error: _context29.t0\n              }));\n            case 15:\n            case \"end\":\n              return _context29.stop();\n          }\n        }, _callee29, this, [[8, 12]]);\n      }));\n    }\n  }, {\n    key: \"_getAddress\",\n    value: function _getAddress(addressOrName) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee30() {\n        var address;\n        return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n          while (1) switch (_context30.prev = _context30.next) {\n            case 0:\n              _context30.next = 2;\n              return addressOrName;\n            case 2:\n              addressOrName = _context30.sent;\n              if (typeof addressOrName !== \"string\") {\n                logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n              }\n              _context30.next = 6;\n              return this.resolveName(addressOrName);\n            case 6:\n              address = _context30.sent;\n              if (address == null) {\n                logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                  operation: \"resolveName(\".concat(JSON.stringify(addressOrName), \")\")\n                });\n              }\n              return _context30.abrupt(\"return\", address);\n            case 9:\n            case \"end\":\n              return _context30.stop();\n          }\n        }, _callee30, this);\n      }));\n    }\n  }, {\n    key: \"_getBlock\",\n    value: function _getBlock(blockHashOrBlockTag, includeTransactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {\n        var _this15 = this;\n        var blockNumber, params;\n        return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n          while (1) switch (_context32.prev = _context32.next) {\n            case 0:\n              _context32.next = 2;\n              return this.getNetwork();\n            case 2:\n              _context32.next = 4;\n              return blockHashOrBlockTag;\n            case 4:\n              blockHashOrBlockTag = _context32.sent;\n              // If blockTag is a number (not \"latest\", etc), this is the block number\n              blockNumber = -128;\n              params = {\n                includeTransactions: !!includeTransactions\n              };\n              if (!isHexString(blockHashOrBlockTag, 32)) {\n                _context32.next = 11;\n                break;\n              }\n              params.blockHash = blockHashOrBlockTag;\n              _context32.next = 21;\n              break;\n            case 11:\n              _context32.prev = 11;\n              _context32.next = 14;\n              return this._getBlockTag(blockHashOrBlockTag);\n            case 14:\n              params.blockTag = _context32.sent;\n              if (isHexString(params.blockTag)) {\n                blockNumber = parseInt(params.blockTag.substring(2), 16);\n              }\n              _context32.next = 21;\n              break;\n            case 18:\n              _context32.prev = 18;\n              _context32.t0 = _context32[\"catch\"](11);\n              logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            case 21:\n              return _context32.abrupt(\"return\", poll(function () {\n                return __awaiter(_this15, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee31() {\n                  var _this16 = this;\n                  var block, _blockNumber, i, tx, confirmations, blockWithTxs;\n                  return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n                    while (1) switch (_context31.prev = _context31.next) {\n                      case 0:\n                        _context31.next = 2;\n                        return this.perform(\"getBlock\", params);\n                      case 2:\n                        block = _context31.sent;\n                        if (!(block == null)) {\n                          _context31.next = 11;\n                          break;\n                        }\n                        if (!(params.blockHash != null)) {\n                          _context31.next = 7;\n                          break;\n                        }\n                        if (!(this._emitted[\"b:\" + params.blockHash] == null)) {\n                          _context31.next = 7;\n                          break;\n                        }\n                        return _context31.abrupt(\"return\", null);\n                      case 7:\n                        if (!(params.blockTag != null)) {\n                          _context31.next = 10;\n                          break;\n                        }\n                        if (!(blockNumber > this._emitted.block)) {\n                          _context31.next = 10;\n                          break;\n                        }\n                        return _context31.abrupt(\"return\", null);\n                      case 10:\n                        return _context31.abrupt(\"return\", undefined);\n                      case 11:\n                        if (!includeTransactions) {\n                          _context31.next = 34;\n                          break;\n                        }\n                        _blockNumber = null;\n                        i = 0;\n                      case 14:\n                        if (!(i < block.transactions.length)) {\n                          _context31.next = 31;\n                          break;\n                        }\n                        tx = block.transactions[i];\n                        if (!(tx.blockNumber == null)) {\n                          _context31.next = 20;\n                          break;\n                        }\n                        tx.confirmations = 0;\n                        _context31.next = 28;\n                        break;\n                      case 20:\n                        if (!(tx.confirmations == null)) {\n                          _context31.next = 28;\n                          break;\n                        }\n                        if (!(_blockNumber == null)) {\n                          _context31.next = 25;\n                          break;\n                        }\n                        _context31.next = 24;\n                        return this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                      case 24:\n                        _blockNumber = _context31.sent;\n                      case 25:\n                        // Add the confirmations using the fast block number (pessimistic)\n                        confirmations = _blockNumber - tx.blockNumber + 1;\n                        if (confirmations <= 0) {\n                          confirmations = 1;\n                        }\n                        tx.confirmations = confirmations;\n                      case 28:\n                        i++;\n                        _context31.next = 14;\n                        break;\n                      case 31:\n                        blockWithTxs = this.formatter.blockWithTransactions(block);\n                        blockWithTxs.transactions = blockWithTxs.transactions.map(function (tx) {\n                          return _this16._wrapTransaction(tx);\n                        });\n                        return _context31.abrupt(\"return\", blockWithTxs);\n                      case 34:\n                        return _context31.abrupt(\"return\", this.formatter.block(block));\n                      case 35:\n                      case \"end\":\n                        return _context31.stop();\n                    }\n                  }, _callee31, this);\n                }));\n              }, {\n                oncePoll: this\n              }));\n            case 22:\n            case \"end\":\n              return _context32.stop();\n          }\n        }, _callee32, this, [[11, 18]]);\n      }));\n    }\n  }, {\n    key: \"getBlock\",\n    value: function getBlock(blockHashOrBlockTag) {\n      return this._getBlock(blockHashOrBlockTag, false);\n    }\n  }, {\n    key: \"getBlockWithTransactions\",\n    value: function getBlockWithTransactions(blockHashOrBlockTag) {\n      return this._getBlock(blockHashOrBlockTag, true);\n    }\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction(transactionHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee34() {\n        var _this17 = this;\n        var params;\n        return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n          while (1) switch (_context34.prev = _context34.next) {\n            case 0:\n              _context34.next = 2;\n              return this.getNetwork();\n            case 2:\n              _context34.next = 4;\n              return transactionHash;\n            case 4:\n              transactionHash = _context34.sent;\n              params = {\n                transactionHash: this.formatter.hash(transactionHash, true)\n              };\n              return _context34.abrupt(\"return\", poll(function () {\n                return __awaiter(_this17, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee33() {\n                  var result, tx, blockNumber, confirmations;\n                  return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n                    while (1) switch (_context33.prev = _context33.next) {\n                      case 0:\n                        _context33.next = 2;\n                        return this.perform(\"getTransaction\", params);\n                      case 2:\n                        result = _context33.sent;\n                        if (!(result == null)) {\n                          _context33.next = 7;\n                          break;\n                        }\n                        if (!(this._emitted[\"t:\" + transactionHash] == null)) {\n                          _context33.next = 6;\n                          break;\n                        }\n                        return _context33.abrupt(\"return\", null);\n                      case 6:\n                        return _context33.abrupt(\"return\", undefined);\n                      case 7:\n                        tx = this.formatter.transactionResponse(result);\n                        if (!(tx.blockNumber == null)) {\n                          _context33.next = 12;\n                          break;\n                        }\n                        tx.confirmations = 0;\n                        _context33.next = 19;\n                        break;\n                      case 12:\n                        if (!(tx.confirmations == null)) {\n                          _context33.next = 19;\n                          break;\n                        }\n                        _context33.next = 15;\n                        return this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                      case 15:\n                        blockNumber = _context33.sent;\n                        // Add the confirmations using the fast block number (pessimistic)\n                        confirmations = blockNumber - tx.blockNumber + 1;\n                        if (confirmations <= 0) {\n                          confirmations = 1;\n                        }\n                        tx.confirmations = confirmations;\n                      case 19:\n                        return _context33.abrupt(\"return\", this._wrapTransaction(tx));\n                      case 20:\n                      case \"end\":\n                        return _context33.stop();\n                    }\n                  }, _callee33, this);\n                }));\n              }, {\n                oncePoll: this\n              }));\n            case 7:\n            case \"end\":\n              return _context34.stop();\n          }\n        }, _callee34, this);\n      }));\n    }\n  }, {\n    key: \"getTransactionReceipt\",\n    value: function getTransactionReceipt(transactionHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee36() {\n        var _this18 = this;\n        var params;\n        return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n          while (1) switch (_context36.prev = _context36.next) {\n            case 0:\n              _context36.next = 2;\n              return this.getNetwork();\n            case 2:\n              _context36.next = 4;\n              return transactionHash;\n            case 4:\n              transactionHash = _context36.sent;\n              params = {\n                transactionHash: this.formatter.hash(transactionHash, true)\n              };\n              return _context36.abrupt(\"return\", poll(function () {\n                return __awaiter(_this18, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee35() {\n                  var result, receipt, blockNumber, confirmations;\n                  return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n                    while (1) switch (_context35.prev = _context35.next) {\n                      case 0:\n                        _context35.next = 2;\n                        return this.perform(\"getTransactionReceipt\", params);\n                      case 2:\n                        result = _context35.sent;\n                        if (!(result == null)) {\n                          _context35.next = 7;\n                          break;\n                        }\n                        if (!(this._emitted[\"t:\" + transactionHash] == null)) {\n                          _context35.next = 6;\n                          break;\n                        }\n                        return _context35.abrupt(\"return\", null);\n                      case 6:\n                        return _context35.abrupt(\"return\", undefined);\n                      case 7:\n                        if (!(result.blockHash == null)) {\n                          _context35.next = 9;\n                          break;\n                        }\n                        return _context35.abrupt(\"return\", undefined);\n                      case 9:\n                        receipt = this.formatter.receipt(result);\n                        if (!(receipt.blockNumber == null)) {\n                          _context35.next = 14;\n                          break;\n                        }\n                        receipt.confirmations = 0;\n                        _context35.next = 21;\n                        break;\n                      case 14:\n                        if (!(receipt.confirmations == null)) {\n                          _context35.next = 21;\n                          break;\n                        }\n                        _context35.next = 17;\n                        return this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                      case 17:\n                        blockNumber = _context35.sent;\n                        // Add the confirmations using the fast block number (pessimistic)\n                        confirmations = blockNumber - receipt.blockNumber + 1;\n                        if (confirmations <= 0) {\n                          confirmations = 1;\n                        }\n                        receipt.confirmations = confirmations;\n                      case 21:\n                        return _context35.abrupt(\"return\", receipt);\n                      case 22:\n                      case \"end\":\n                        return _context35.stop();\n                    }\n                  }, _callee35, this);\n                }));\n              }, {\n                oncePoll: this\n              }));\n            case 7:\n            case \"end\":\n              return _context36.stop();\n          }\n        }, _callee36, this);\n      }));\n    }\n  }, {\n    key: \"getLogs\",\n    value: function getLogs(filter) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee37() {\n        var params, logs;\n        return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n          while (1) switch (_context37.prev = _context37.next) {\n            case 0:\n              _context37.next = 2;\n              return this.getNetwork();\n            case 2:\n              _context37.next = 4;\n              return resolveProperties({\n                filter: this._getFilter(filter)\n              });\n            case 4:\n              params = _context37.sent;\n              _context37.next = 7;\n              return this.perform(\"getLogs\", params);\n            case 7:\n              logs = _context37.sent;\n              logs.forEach(function (log) {\n                if (log.removed == null) {\n                  log.removed = false;\n                }\n              });\n              return _context37.abrupt(\"return\", Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs));\n            case 10:\n            case \"end\":\n              return _context37.stop();\n          }\n        }, _callee37, this);\n      }));\n    }\n  }, {\n    key: \"getEtherPrice\",\n    value: function getEtherPrice() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee38() {\n        return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n          while (1) switch (_context38.prev = _context38.next) {\n            case 0:\n              _context38.next = 2;\n              return this.getNetwork();\n            case 2:\n              return _context38.abrupt(\"return\", this.perform(\"getEtherPrice\", {}));\n            case 3:\n            case \"end\":\n              return _context38.stop();\n          }\n        }, _callee38, this);\n      }));\n    }\n  }, {\n    key: \"_getBlockTag\",\n    value: function _getBlockTag(blockTag) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee39() {\n        var blockNumber;\n        return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n          while (1) switch (_context39.prev = _context39.next) {\n            case 0:\n              _context39.next = 2;\n              return blockTag;\n            case 2:\n              blockTag = _context39.sent;\n              if (!(typeof blockTag === \"number\" && blockTag < 0)) {\n                _context39.next = 11;\n                break;\n              }\n              if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n              }\n              _context39.next = 7;\n              return this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            case 7:\n              blockNumber = _context39.sent;\n              blockNumber += blockTag;\n              if (blockNumber < 0) {\n                blockNumber = 0;\n              }\n              return _context39.abrupt(\"return\", this.formatter.blockTag(blockNumber));\n            case 11:\n              return _context39.abrupt(\"return\", this.formatter.blockTag(blockTag));\n            case 12:\n            case \"end\":\n              return _context39.stop();\n          }\n        }, _callee39, this);\n      }));\n    }\n  }, {\n    key: \"getResolver\",\n    value: function getResolver(name) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee40() {\n        var currentName, addr, resolver;\n        return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n          while (1) switch (_context40.prev = _context40.next) {\n            case 0:\n              currentName = name;\n            case 1:\n              if (!true) {\n                _context40.next = 22;\n                break;\n              }\n              if (!(currentName === \"\" || currentName === \".\")) {\n                _context40.next = 4;\n                break;\n              }\n              return _context40.abrupt(\"return\", null);\n            case 4:\n              if (!(name !== \"eth\" && currentName === \"eth\")) {\n                _context40.next = 6;\n                break;\n              }\n              return _context40.abrupt(\"return\", null);\n            case 6:\n              _context40.next = 8;\n              return this._getResolver(currentName, \"getResolver\");\n            case 8:\n              addr = _context40.sent;\n              if (!(addr != null)) {\n                _context40.next = 19;\n                break;\n              }\n              resolver = new Resolver(this, addr, name); // Legacy resolver found, using EIP-2544 so it isn't safe to use\n              _context40.t0 = currentName !== name;\n              if (!_context40.t0) {\n                _context40.next = 16;\n                break;\n              }\n              _context40.next = 15;\n              return resolver.supportsWildcard();\n            case 15:\n              _context40.t0 = !_context40.sent;\n            case 16:\n              if (!_context40.t0) {\n                _context40.next = 18;\n                break;\n              }\n              return _context40.abrupt(\"return\", null);\n            case 18:\n              return _context40.abrupt(\"return\", resolver);\n            case 19:\n              // Get the parent node\n              currentName = currentName.split(\".\").slice(1).join(\".\");\n              _context40.next = 1;\n              break;\n            case 22:\n            case \"end\":\n              return _context40.stop();\n          }\n        }, _callee40, this);\n      }));\n    }\n  }, {\n    key: \"_getResolver\",\n    value: function _getResolver(name, operation) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee41() {\n        var network, addrData;\n        return _regeneratorRuntime().wrap(function _callee41$(_context41) {\n          while (1) switch (_context41.prev = _context41.next) {\n            case 0:\n              if (operation == null) {\n                operation = \"ENS\";\n              }\n              _context41.next = 3;\n              return this.getNetwork();\n            case 3:\n              network = _context41.sent;\n              // No ENS...\n              if (!network.ensAddress) {\n                logger.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, {\n                  operation: operation,\n                  network: network.name\n                });\n              }\n              _context41.prev = 5;\n              _context41.next = 8;\n              return this.call({\n                to: network.ensAddress,\n                data: \"0x0178b8bf\" + namehash(name).substring(2)\n              });\n            case 8:\n              addrData = _context41.sent;\n              return _context41.abrupt(\"return\", this.formatter.callAddress(addrData));\n            case 12:\n              _context41.prev = 12;\n              _context41.t0 = _context41[\"catch\"](5);\n            case 14:\n              return _context41.abrupt(\"return\", null);\n            case 15:\n            case \"end\":\n              return _context41.stop();\n          }\n        }, _callee41, this, [[5, 12]]);\n      }));\n    }\n  }, {\n    key: \"resolveName\",\n    value: function resolveName(name) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee42() {\n        var resolver;\n        return _regeneratorRuntime().wrap(function _callee42$(_context42) {\n          while (1) switch (_context42.prev = _context42.next) {\n            case 0:\n              _context42.next = 2;\n              return name;\n            case 2:\n              name = _context42.sent;\n              _context42.prev = 3;\n              return _context42.abrupt(\"return\", Promise.resolve(this.formatter.address(name)));\n            case 7:\n              _context42.prev = 7;\n              _context42.t0 = _context42[\"catch\"](3);\n              if (!isHexString(name)) {\n                _context42.next = 11;\n                break;\n              }\n              throw _context42.t0;\n            case 11:\n              if (typeof name !== \"string\") {\n                logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n              }\n              // Get the addr from the resolver\n              _context42.next = 14;\n              return this.getResolver(name);\n            case 14:\n              resolver = _context42.sent;\n              if (resolver) {\n                _context42.next = 17;\n                break;\n              }\n              return _context42.abrupt(\"return\", null);\n            case 17:\n              _context42.next = 19;\n              return resolver.getAddress();\n            case 19:\n              return _context42.abrupt(\"return\", _context42.sent);\n            case 20:\n            case \"end\":\n              return _context42.stop();\n          }\n        }, _callee42, this, [[3, 7]]);\n      }));\n    }\n  }, {\n    key: \"lookupAddress\",\n    value: function lookupAddress(address) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee43() {\n        var node, resolverAddr, name, addr;\n        return _regeneratorRuntime().wrap(function _callee43$(_context43) {\n          while (1) switch (_context43.prev = _context43.next) {\n            case 0:\n              _context43.next = 2;\n              return address;\n            case 2:\n              address = _context43.sent;\n              address = this.formatter.address(address);\n              node = address.substring(2).toLowerCase() + \".addr.reverse\";\n              _context43.next = 7;\n              return this._getResolver(node, \"lookupAddress\");\n            case 7:\n              resolverAddr = _context43.sent;\n              if (!(resolverAddr == null)) {\n                _context43.next = 10;\n                break;\n              }\n              return _context43.abrupt(\"return\", null);\n            case 10:\n              _context43.t0 = _parseString;\n              _context43.next = 13;\n              return this.call({\n                to: resolverAddr,\n                data: \"0x691f3431\" + namehash(node).substring(2)\n              });\n            case 13:\n              _context43.t1 = _context43.sent;\n              name = (0, _context43.t0)(_context43.t1, 0);\n              _context43.next = 17;\n              return this.resolveName(name);\n            case 17:\n              addr = _context43.sent;\n              if (!(addr != address)) {\n                _context43.next = 20;\n                break;\n              }\n              return _context43.abrupt(\"return\", null);\n            case 20:\n              return _context43.abrupt(\"return\", name);\n            case 21:\n            case \"end\":\n              return _context43.stop();\n          }\n        }, _callee43, this);\n      }));\n    }\n  }, {\n    key: \"getAvatar\",\n    value: function getAvatar(nameOrAddress) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee44() {\n        var resolver, address, node, resolverAddress, _avatar, name, avatar;\n        return _regeneratorRuntime().wrap(function _callee44$(_context44) {\n          while (1) switch (_context44.prev = _context44.next) {\n            case 0:\n              resolver = null;\n              if (!isHexString(nameOrAddress)) {\n                _context44.next = 40;\n                break;\n              }\n              // Address; reverse lookup\n              address = this.formatter.address(nameOrAddress);\n              node = address.substring(2).toLowerCase() + \".addr.reverse\";\n              _context44.next = 6;\n              return this._getResolver(node, \"getAvatar\");\n            case 6:\n              resolverAddress = _context44.sent;\n              if (resolverAddress) {\n                _context44.next = 9;\n                break;\n              }\n              return _context44.abrupt(\"return\", null);\n            case 9:\n              // Try resolving the avatar against the addr.reverse resolver\n              resolver = new Resolver(this, resolverAddress, node);\n              _context44.prev = 10;\n              _context44.next = 13;\n              return resolver.getAvatar();\n            case 13:\n              _avatar = _context44.sent;\n              if (!_avatar) {\n                _context44.next = 16;\n                break;\n              }\n              return _context44.abrupt(\"return\", _avatar.url);\n            case 16:\n              _context44.next = 22;\n              break;\n            case 18:\n              _context44.prev = 18;\n              _context44.t0 = _context44[\"catch\"](10);\n              if (!(_context44.t0.code !== Logger.errors.CALL_EXCEPTION)) {\n                _context44.next = 22;\n                break;\n              }\n              throw _context44.t0;\n            case 22:\n              _context44.prev = 22;\n              _context44.t1 = _parseString;\n              _context44.next = 26;\n              return this.call({\n                to: resolverAddress,\n                data: \"0x691f3431\" + namehash(node).substring(2)\n              });\n            case 26:\n              _context44.t2 = _context44.sent;\n              name = (0, _context44.t1)(_context44.t2, 0);\n              _context44.next = 30;\n              return this.getResolver(name);\n            case 30:\n              resolver = _context44.sent;\n              _context44.next = 38;\n              break;\n            case 33:\n              _context44.prev = 33;\n              _context44.t3 = _context44[\"catch\"](22);\n              if (!(_context44.t3.code !== Logger.errors.CALL_EXCEPTION)) {\n                _context44.next = 37;\n                break;\n              }\n              throw _context44.t3;\n            case 37:\n              return _context44.abrupt(\"return\", null);\n            case 38:\n              _context44.next = 45;\n              break;\n            case 40:\n              _context44.next = 42;\n              return this.getResolver(nameOrAddress);\n            case 42:\n              resolver = _context44.sent;\n              if (resolver) {\n                _context44.next = 45;\n                break;\n              }\n              return _context44.abrupt(\"return\", null);\n            case 45:\n              _context44.next = 47;\n              return resolver.getAvatar();\n            case 47:\n              avatar = _context44.sent;\n              if (!(avatar == null)) {\n                _context44.next = 50;\n                break;\n              }\n              return _context44.abrupt(\"return\", null);\n            case 50:\n              return _context44.abrupt(\"return\", avatar.url);\n            case 51:\n            case \"end\":\n              return _context44.stop();\n          }\n        }, _callee44, this, [[10, 18], [22, 33]]);\n      }));\n    }\n  }, {\n    key: \"perform\",\n    value: function perform(method, params) {\n      return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, {\n        operation: method\n      });\n    }\n  }, {\n    key: \"_startEvent\",\n    value: function _startEvent(event) {\n      this.polling = this._events.filter(function (e) {\n        return e.pollable();\n      }).length > 0;\n    }\n  }, {\n    key: \"_stopEvent\",\n    value: function _stopEvent(event) {\n      this.polling = this._events.filter(function (e) {\n        return e.pollable();\n      }).length > 0;\n    }\n  }, {\n    key: \"_addEventListener\",\n    value: function _addEventListener(eventName, listener, once) {\n      var event = new Event(getEventTag(eventName), listener, once);\n      this._events.push(event);\n      this._startEvent(event);\n      return this;\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventName, listener) {\n      return this._addEventListener(eventName, listener, false);\n    }\n  }, {\n    key: \"once\",\n    value: function once(eventName, listener) {\n      return this._addEventListener(eventName, listener, true);\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(eventName) {\n      var _this19 = this;\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      var result = false;\n      var stopped = [];\n      var eventTag = getEventTag(eventName);\n      this._events = this._events.filter(function (event) {\n        if (event.tag !== eventTag) {\n          return true;\n        }\n        setTimeout(function () {\n          event.listener.apply(_this19, args);\n        }, 0);\n        result = true;\n        if (event.once) {\n          stopped.push(event);\n          return false;\n        }\n        return true;\n      });\n      stopped.forEach(function (event) {\n        _this19._stopEvent(event);\n      });\n      return result;\n    }\n  }, {\n    key: \"listenerCount\",\n    value: function listenerCount(eventName) {\n      if (!eventName) {\n        return this._events.length;\n      }\n      var eventTag = getEventTag(eventName);\n      return this._events.filter(function (event) {\n        return event.tag === eventTag;\n      }).length;\n    }\n  }, {\n    key: \"listeners\",\n    value: function listeners(eventName) {\n      if (eventName == null) {\n        return this._events.map(function (event) {\n          return event.listener;\n        });\n      }\n      var eventTag = getEventTag(eventName);\n      return this._events.filter(function (event) {\n        return event.tag === eventTag;\n      }).map(function (event) {\n        return event.listener;\n      });\n    }\n  }, {\n    key: \"off\",\n    value: function off(eventName, listener) {\n      var _this20 = this;\n      if (listener == null) {\n        return this.removeAllListeners(eventName);\n      }\n      var stopped = [];\n      var found = false;\n      var eventTag = getEventTag(eventName);\n      this._events = this._events.filter(function (event) {\n        if (event.tag !== eventTag || event.listener != listener) {\n          return true;\n        }\n        if (found) {\n          return true;\n        }\n        found = true;\n        stopped.push(event);\n        return false;\n      });\n      stopped.forEach(function (event) {\n        _this20._stopEvent(event);\n      });\n      return this;\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventName) {\n      var _this21 = this;\n      var stopped = [];\n      if (eventName == null) {\n        stopped = this._events;\n        this._events = [];\n      } else {\n        var eventTag = getEventTag(eventName);\n        this._events = this._events.filter(function (event) {\n          if (event.tag !== eventTag) {\n            return true;\n          }\n          stopped.push(event);\n          return false;\n        });\n      }\n      stopped.forEach(function (event) {\n        _this21._stopEvent(event);\n      });\n      return this;\n    }\n  }], [{\n    key: \"getFormatter\",\n    value: function getFormatter() {\n      if (defaultFormatter == null) {\n        defaultFormatter = new Formatter();\n      }\n      return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n  }, {\n    key: \"getNetwork\",\n    value: function getNetwork(network) {\n      return _getNetwork(network == null ? \"homestead\" : network);\n    }\n  }]);\n  return BaseProvider;\n}(Provider);","map":{"version":3,"mappings":"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","names":["ForkEvent","Provider","encode","base64Encode","Base58","BigNumber","arrayify","concat","hexConcat","hexDataLength","hexDataSlice","hexlify","hexValue","hexZeroPad","isHexString","HashZero","dnsEncode","namehash","getNetwork","defineReadOnly","getStatic","resolveProperties","sha256","toUtf8Bytes","toUtf8String","fetchJson","poll","bech32","Logger","version","logger","Formatter","MAX_CCIP_REDIRECTS","checkTopic","topic","throwArgumentError","toLowerCase","serializeTopics","topics","slice","length","pop","map","Array","isArray","unique","forEach","sorted","Object","keys","sort","join","deserializeTopics","data","split","comps","getEventTag","eventName","indexOf","isForkEvent","warn","Error","address","getTime","Date","stall","duration","Promise","resolve","setTimeout","PollableEvents","Event","tag","listener","once","_lastBlockNumber","_inflight","type","hash","filter","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","value","from","toHexString","base58Encode","matcherIpfs","RegExp","matchers","_parseString","result","start","_parseBytes","error","offset","toNumber","getIpfsLink","link","match","substring","numPad","padded","Uint8Array","set","bytesPad","Math","ceil","encodeBytes","datas","byteCount","i","push","Resolver","provider","name","resolvedAddress","formatter","_supportsEip2544","call","to","then","eq","catch","code","errors","CALL_EXCEPTION","selector","parameters","tx","ccipReadEnabled","parseBytes","supportsWildcard","throwError","transaction","_fetch","coinType","hexBytes","coinInfo","String","UNSUPPORTED_OPERATION","operation","bytes","parseInt","words","toWords","unshift","callAddress","_fetchBytes","_getAddress","linkage","content","getText","avatar","scheme","url","_resolvedAddress","getAddress","owner","addr","tokenId","tokenOwner","balance","isZero","toString","metadataUrl","replace","metadata","JSON","stringify","imageUrl","image","ipfs","ipns","swarm","skynet","urlSafe","a","key","keyBytes","defaultFormatter","nextPollId","BaseProvider","network","_events","_emitted","block","disableCcipRead","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","emit","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","UNKNOWN_ERROR","NETWORK_ERROR","event","undefined","calldata","urls","sender","errorMessages","href","json","errorPassThrough","response","status","statusCode","errorMessage","message","SERVER_ERROR","m","maxAge","_internalBlockNumber","internalBlockNumber","respTime","blockNumber","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","abs","makeError","previousBlockNumber","eventBlockNumber","runner","getTransactionReceipt","receipt","fromBlock","toBlock","minFromBlock","getLogs","logs","log","blockHash","transactionHash","all","polling","currentNetwork","chainId","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","now","getBlockNumber","confirmations","timeout","_waitForTransaction","replaceable","reject","cancelFuncs","done","alreadyDone","func","minedHandler","on","removeListener","lastBlockNumber","startBlock","scannedBlock","replaceHandler","__awaiter","getTransactionCount","nonce","getTransaction","mined","getBlockWithTransactions","ti","transactions","waitForTransaction","reason","TRANSACTION_REPLACED","cancelled","replacement","_wrapTransaction","timer","TIMEOUT","unref","clearTimeout","method","addressOrName","blockTag","_getBlockTag","params","position","p","expectedHash","returnedHash","wait","confirms","signedTransaction","t","hexTx","values","v","accessList","transactionRequest","attempt","redirects","txSender","signature","urlsOffset","urlsLength","urlsData","u","callbackSelector","extraData","ccipReadFetch","ccipResult","_call","_getTransactionRequest","resolved","resolveName","blockHashOrBlockTag","includeTransactions","blockWithTxs","blockWithTransactions","oncePoll","_getBlock","transactionResponse","_getFilter","removed","arrayOf","filterLog","bind","currentName","_getResolver","resolver","ensAddress","addrData","getResolver","node","resolverAddr","nameOrAddress","resolverAddress","getAvatar","NOT_IMPLEMENTED","e","pollable","_startEvent","_addEventListener","args","stopped","eventTag","apply","_stopEvent","removeAllListeners","found"],"sourceRoot":"","sources":["../src.ts/base-provider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}