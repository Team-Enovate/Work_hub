{"ast":null,"code":"\"use strict\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { getUrl } from \"./geturl\";\nfunction staller(duration) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, duration);\n  });\n}\nfunction bodyify(value, type) {\n  if (value == null) {\n    return null;\n  }\n  if (typeof value === \"string\") {\n    return value;\n  }\n  if (isBytesLike(value)) {\n    if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n      try {\n        return toUtf8String(value);\n      } catch (error) {}\n      ;\n    }\n    return hexlify(value);\n  }\n  return value;\n}\nfunction unpercent(value) {\n  return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, function (all, code) {\n    return String.fromCharCode(parseInt(code, 16));\n  }));\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData(connection, body, processFunc) {\n  // How many times to retry in the event of a throttle\n  var attemptLimit = typeof connection === \"object\" && connection.throttleLimit != null ? connection.throttleLimit : 12;\n  logger.assertArgument(attemptLimit > 0 && attemptLimit % 1 === 0, \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n  var throttleCallback = typeof connection === \"object\" ? connection.throttleCallback : null;\n  var throttleSlotInterval = typeof connection === \"object\" && typeof connection.throttleSlotInterval === \"number\" ? connection.throttleSlotInterval : 100;\n  logger.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 === 0, \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n  var errorPassThrough = typeof connection === \"object\" ? !!connection.errorPassThrough : false;\n  var headers = {};\n  var url = null;\n  // @TODO: Allow ConnectionInfo to override some of these values\n  var options = {\n    method: \"GET\"\n  };\n  var allow304 = false;\n  var timeout = 2 * 60 * 1000;\n  if (typeof connection === \"string\") {\n    url = connection;\n  } else if (typeof connection === \"object\") {\n    if (connection == null || connection.url == null) {\n      logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n    }\n    url = connection.url;\n    if (typeof connection.timeout === \"number\" && connection.timeout > 0) {\n      timeout = connection.timeout;\n    }\n    if (connection.headers) {\n      for (var key in connection.headers) {\n        headers[key.toLowerCase()] = {\n          key: key,\n          value: String(connection.headers[key])\n        };\n        if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n          allow304 = true;\n        }\n      }\n    }\n    options.allowGzip = !!connection.allowGzip;\n    if (connection.user != null && connection.password != null) {\n      if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n        logger.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"url\",\n          url: url,\n          user: connection.user,\n          password: \"[REDACTED]\"\n        });\n      }\n      var authorization = connection.user + \":\" + connection.password;\n      headers[\"authorization\"] = {\n        key: \"Authorization\",\n        value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n      };\n    }\n    if (connection.skipFetchSetup != null) {\n      options.skipFetchSetup = !!connection.skipFetchSetup;\n    }\n    if (connection.fetchOptions != null) {\n      options.fetchOptions = shallowCopy(connection.fetchOptions);\n    }\n  }\n  var reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n  var dataMatch = url ? url.match(reData) : null;\n  if (dataMatch) {\n    try {\n      var response = {\n        statusCode: 200,\n        statusMessage: \"OK\",\n        headers: {\n          \"content-type\": dataMatch[1] || \"text/plain\"\n        },\n        body: dataMatch[2] ? base64Decode(dataMatch[3]) : unpercent(dataMatch[3])\n      };\n      var result = response.body;\n      if (processFunc) {\n        result = processFunc(response.body, response);\n      }\n      return Promise.resolve(result);\n    } catch (error) {\n      logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n        body: bodyify(dataMatch[1], dataMatch[2]),\n        error: error,\n        requestBody: null,\n        requestMethod: \"GET\",\n        url: url\n      });\n    }\n  }\n  if (body) {\n    options.method = \"POST\";\n    options.body = body;\n    if (headers[\"content-type\"] == null) {\n      headers[\"content-type\"] = {\n        key: \"Content-Type\",\n        value: \"application/octet-stream\"\n      };\n    }\n    if (headers[\"content-length\"] == null) {\n      headers[\"content-length\"] = {\n        key: \"Content-Length\",\n        value: String(body.length)\n      };\n    }\n  }\n  var flatHeaders = {};\n  Object.keys(headers).forEach(function (key) {\n    var header = headers[key];\n    flatHeaders[header.key] = header.value;\n  });\n  options.headers = flatHeaders;\n  var runningTimeout = function () {\n    var timer = null;\n    var promise = new Promise(function (resolve, reject) {\n      if (timeout) {\n        timer = setTimeout(function () {\n          if (timer == null) {\n            return;\n          }\n          timer = null;\n          reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            timeout: timeout,\n            url: url\n          }));\n        }, timeout);\n      }\n    });\n    var cancel = function cancel() {\n      if (timer == null) {\n        return;\n      }\n      clearTimeout(timer);\n      timer = null;\n    };\n    return {\n      promise: promise,\n      cancel: cancel\n    };\n  }();\n  var runningFetch = function () {\n    return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var attempt, _response, location, tryAgain, stall, retryAfter, _body, _result, _tryAgain, _timeout;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            attempt = 0;\n          case 1:\n            if (!(attempt < attemptLimit)) {\n              _context.next = 65;\n              break;\n            }\n            _response = null;\n            _context.prev = 3;\n            _context.next = 6;\n            return getUrl(url, options);\n          case 6:\n            _response = _context.sent;\n            if (!(attempt < attemptLimit)) {\n              _context.next = 28;\n              break;\n            }\n            if (!(_response.statusCode === 301 || _response.statusCode === 302)) {\n              _context.next = 15;\n              break;\n            }\n            // Redirection; for now we only support absolute locataions\n            location = _response.headers.location || \"\";\n            if (!(options.method === \"GET\" && location.match(/^https:/))) {\n              _context.next = 13;\n              break;\n            }\n            url = _response.headers.location;\n            return _context.abrupt(\"continue\", 62);\n          case 13:\n            _context.next = 28;\n            break;\n          case 15:\n            if (!(_response.statusCode === 429)) {\n              _context.next = 28;\n              break;\n            }\n            // Exponential back-off throttling\n            tryAgain = true;\n            if (!throttleCallback) {\n              _context.next = 21;\n              break;\n            }\n            _context.next = 20;\n            return throttleCallback(attempt, url);\n          case 20:\n            tryAgain = _context.sent;\n          case 21:\n            if (!tryAgain) {\n              _context.next = 28;\n              break;\n            }\n            stall = 0;\n            retryAfter = _response.headers[\"retry-after\"];\n            if (typeof retryAfter === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n              stall = parseInt(retryAfter) * 1000;\n            } else {\n              stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n            }\n            //console.log(\"Stalling 429\");\n            _context.next = 27;\n            return staller(stall);\n          case 27:\n            return _context.abrupt(\"continue\", 62);\n          case 28:\n            _context.next = 34;\n            break;\n          case 30:\n            _context.prev = 30;\n            _context.t0 = _context[\"catch\"](3);\n            _response = _context.t0.response;\n            if (_response == null) {\n              runningTimeout.cancel();\n              logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                serverError: _context.t0,\n                url: url\n              });\n            }\n          case 34:\n            _body = _response.body;\n            if (allow304 && _response.statusCode === 304) {\n              _body = null;\n            } else if (!errorPassThrough && (_response.statusCode < 200 || _response.statusCode >= 300)) {\n              runningTimeout.cancel();\n              logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                status: _response.statusCode,\n                headers: _response.headers,\n                body: bodyify(_body, _response.headers ? _response.headers[\"content-type\"] : null),\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n              });\n            }\n            if (!processFunc) {\n              _context.next = 60;\n              break;\n            }\n            _context.prev = 37;\n            _context.next = 40;\n            return processFunc(_body, _response);\n          case 40:\n            _result = _context.sent;\n            runningTimeout.cancel();\n            return _context.abrupt(\"return\", _result);\n          case 45:\n            _context.prev = 45;\n            _context.t1 = _context[\"catch\"](37);\n            if (!(_context.t1.throttleRetry && attempt < attemptLimit)) {\n              _context.next = 58;\n              break;\n            }\n            _tryAgain = true;\n            if (!throttleCallback) {\n              _context.next = 53;\n              break;\n            }\n            _context.next = 52;\n            return throttleCallback(attempt, url);\n          case 52:\n            _tryAgain = _context.sent;\n          case 53:\n            if (!_tryAgain) {\n              _context.next = 58;\n              break;\n            }\n            _timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt))); //console.log(\"Stalling callback\");\n            _context.next = 57;\n            return staller(_timeout);\n          case 57:\n            return _context.abrupt(\"continue\", 62);\n          case 58:\n            runningTimeout.cancel();\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n              body: bodyify(_body, _response.headers ? _response.headers[\"content-type\"] : null),\n              error: _context.t1,\n              requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n              requestMethod: options.method,\n              url: url\n            });\n          case 60:\n            runningTimeout.cancel();\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return _context.abrupt(\"return\", _body);\n          case 62:\n            attempt++;\n            _context.next = 1;\n            break;\n          case 65:\n            return _context.abrupt(\"return\", logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n              requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n              requestMethod: options.method,\n              url: url\n            }));\n          case 66:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[3, 30], [37, 45]]);\n    }));\n  }();\n  return Promise.race([runningTimeout.promise, runningFetch]);\n}\nexport function fetchJson(connection, json, processFunc) {\n  var processJsonFunc = function processJsonFunc(value, response) {\n    var result = null;\n    if (value != null) {\n      try {\n        result = JSON.parse(toUtf8String(value));\n      } catch (error) {\n        logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n          body: value,\n          error: error\n        });\n      }\n    }\n    if (processFunc) {\n      result = processFunc(result, response);\n    }\n    return result;\n  };\n  // If we have json to send, we must\n  // - add content-type of application/json (unless already overridden)\n  // - convert the json to bytes\n  var body = null;\n  if (json != null) {\n    body = toUtf8Bytes(json);\n    // Create a connection with the content-type set for JSON\n    var updated = typeof connection === \"string\" ? {\n      url: connection\n    } : shallowCopy(connection);\n    if (updated.headers) {\n      var hasContentType = Object.keys(updated.headers).filter(function (k) {\n        return k.toLowerCase() === \"content-type\";\n      }).length !== 0;\n      if (!hasContentType) {\n        updated.headers = shallowCopy(updated.headers);\n        updated.headers[\"content-type\"] = \"application/json\";\n      }\n    } else {\n      updated.headers = {\n        \"content-type\": \"application/json\"\n      };\n    }\n    connection = updated;\n  }\n  return _fetchData(connection, body, processJsonFunc);\n}\nexport function poll(func, options) {\n  if (!options) {\n    options = {};\n  }\n  options = shallowCopy(options);\n  if (options.floor == null) {\n    options.floor = 0;\n  }\n  if (options.ceiling == null) {\n    options.ceiling = 10000;\n  }\n  if (options.interval == null) {\n    options.interval = 250;\n  }\n  return new Promise(function (resolve, reject) {\n    var timer = null;\n    var done = false;\n    // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n    var cancel = function cancel() {\n      if (done) {\n        return false;\n      }\n      done = true;\n      if (timer) {\n        clearTimeout(timer);\n      }\n      return true;\n    };\n    if (options.timeout) {\n      timer = setTimeout(function () {\n        if (cancel()) {\n          reject(new Error(\"timeout\"));\n        }\n      }, options.timeout);\n    }\n    var retryLimit = options.retryLimit;\n    var attempt = 0;\n    function check() {\n      return func().then(function (result) {\n        // If we have a result, or are allowed null then we're done\n        if (result !== undefined) {\n          if (cancel()) {\n            resolve(result);\n          }\n        } else if (options.oncePoll) {\n          options.oncePoll.once(\"poll\", check);\n        } else if (options.onceBlock) {\n          options.onceBlock.once(\"block\", check);\n          // Otherwise, exponential back-off (up to 10s) our next request\n        } else if (!done) {\n          attempt++;\n          if (attempt > retryLimit) {\n            if (cancel()) {\n              reject(new Error(\"retry limit reached\"));\n            }\n            return;\n          }\n          var timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n          if (timeout < options.floor) {\n            timeout = options.floor;\n          }\n          if (timeout > options.ceiling) {\n            timeout = options.ceiling;\n          }\n          setTimeout(check, timeout);\n        }\n        return null;\n      }, function (error) {\n        if (cancel()) {\n          reject(error);\n        }\n      });\n    }\n    check();\n  });\n}","map":{"version":3,"mappings":"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","names":["decode","base64Decode","encode","base64Encode","hexlify","isBytesLike","shallowCopy","toUtf8Bytes","toUtf8String","Logger","version","logger","getUrl","staller","duration","Promise","resolve","setTimeout","bodyify","value","type","split","trim","error","unpercent","replace","all","code","String","fromCharCode","parseInt","_fetchData","connection","body","processFunc","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","errorPassThrough","headers","url","options","method","allow304","timeout","throwArgumentError","key","toLowerCase","indexOf","allowGzip","user","password","substring","allowInsecureAuthentication","throwError","errors","INVALID_ARGUMENT","argument","authorization","skipFetchSetup","fetchOptions","reData","RegExp","dataMatch","match","response","statusCode","statusMessage","result","SERVER_ERROR","requestBody","requestMethod","length","flatHeaders","Object","keys","forEach","header","runningTimeout","timer","promise","reject","makeError","TIMEOUT","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","Math","random","pow","serverError","status","throttleRetry","race","fetchJson","json","processJsonFunc","JSON","parse","updated","hasContentType","filter","k","poll","func","floor","ceiling","interval","done","Error","retryLimit","check","then","undefined","oncePoll","once","onceBlock"],"sourceRoot":"","sources":["../src.ts/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}